{"ast":null,"code":"import { BEGIN, HEAL, ATTACK } from '../action';\nimport { round } from '../utils';\nconst initialState = {\n  level: 0,\n  monsterPv: 100,\n  playerPv: 100,\n  playerName: 'rom',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: true\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case BEGIN:\n      {\n        return { ...state,\n          gameBegining: !state.gameBegining\n        };\n      }\n\n    case heal:\n      {\n        return { ...state,\n          playerPv: state.playerPv + 10\n        };\n      }\n\n    case heal:\n      {\n        return { ...state,\n          playerPv: state.playerPv - round(5, 10),\n          monsterPv: state.monsterPv - action.value == \"atack\" ? round(3, 10) : round(10, 15)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/reducers/index.js"],"names":["BEGIN","HEAL","ATTACK","round","initialState","level","monsterPv","playerPv","playerName","messageDommageMonster","messageDommagePlayer","gameBegining","reducer","state","action","type","heal","value"],"mappings":"AAAA,SAAUA,KAAV,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAqC,WAArC;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CADW;AAEnBC,EAAAA,SAAS,EAAG,GAFO;AAGnBC,EAAAA,QAAQ,EAAG,GAHQ;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,qBAAqB,EAAE,EALJ;AAMnBC,EAAAA,oBAAoB,EAAE,EANH;AAOnBC,EAAAA,YAAY,EAAE;AAPK,CAArB;;AAWE,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BT,YAA8B;AAAA,MAAhBU,MAAgB,uEAAP,EAAO;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKf,KAAL;AAAY;AACV,eAAO,EACL,GAAGa,KADE;AAELF,UAAAA,YAAY,EAAE,CAACE,KAAK,CAACF;AAFhB,SAAP;AAID;;AACD,SAAKK,IAAL;AAAW;AACT,eAAO,EACL,GAAGH,KADE;AAENN,UAAAA,QAAQ,EAAGM,KAAK,CAACN,QAAN,GAAiB;AAFtB,SAAP;AAID;;AACD,SAAKS,IAAL;AAAW;AACT,eAAO,EACL,GAAGH,KADE;AAENN,UAAAA,QAAQ,EAAGM,KAAK,CAACN,QAAN,GAAiBJ,KAAK,CAAC,CAAD,EAAI,EAAJ,CAF3B;AAGNG,UAAAA,SAAS,EAAGO,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACG,KAAzB,IAAkC,OAAlC,GAA4Cd,KAAK,CAAC,CAAD,EAAG,EAAH,CAAjD,GAA0DA,KAAK,CAAC,EAAD,EAAK,EAAL;AAHrE,SAAP;AAKD;;AACC;AAAS,aAAOU,KAAP;AApBb;AAsBD,CAvBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import {  BEGIN,  HEAL, ATTACK} from '../action'\nimport {round} from '../utils'\n\nconst initialState = {\n  level : 0,\n  monsterPv : 100,\n  playerPv : 100,\n  playerName: 'rom',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: true,\n\n  };\n  \n  const reducer = (state = initialState, action = {}) => {\n    switch(action.type) {\n      case BEGIN: {\n        return {\n          ...state,\n          gameBegining: !state.gameBegining\n        }\n      }\n      case heal: {\n        return {\n          ...state,\n         playerPv : state.playerPv + 10\n        }\n      }\n      case heal: {\n        return {\n          ...state,\n         playerPv : state.playerPv - round(5, 10),\n         monsterPv : state.monsterPv - action.value == \"atack\" ? round(3,10) : round(10, 15)\n        }\n      }\n        default: return state\n    }\n  }\n  export default reducer"]},"metadata":{},"sourceType":"module"}