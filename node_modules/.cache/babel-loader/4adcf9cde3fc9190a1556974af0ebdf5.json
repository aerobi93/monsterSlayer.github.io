{"ast":null,"code":"var _jsxFileName = \"/home/romu/Desktop/work/monster_slayer3 (copy)/src/components/button/index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    dommage_min,\n    dommage_max,\n    buttonName,\n    buttonClass,\n    displayAnimation,\n    monsterPv,\n    playerPv,\n    regainMana,\n    begin,\n    end,\n    attack,\n    fireBall,\n    fireCone,\n    ice,\n    heal,\n    monsterCounter\n  } = _ref;\n\n  const handlerClick = evt => {\n    if (!displayAnimation) {\n      if (monsterPv > 0 && playerPv > 0) {\n        setTimeout(() => {\n          regainMana();\n        }, 1000 * 1.5);\n      }\n\n      console.log(evt.target.name, 'evt');\n\n      if (evt.target.name !== 'begin' && evt.target.name !== 'giveUp') {\n        setTimeout(() => {\n          monsterCounter();\n        }, 1000);\n      }\n\n      if (evt.target.name == 'begin') {\n        begin();\n      } else if (evt.target.name == 'giveUp') {\n        end();\n      } else if (evt.target.name == 'heal') {\n        heal();\n      } else if (evt.target.name == 'attack') {\n        attack();\n      } else if (evt.target.name == 'fireBall') {\n        fireBall();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${buttonClass}-container `,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${buttonClass}-button ${buttonClass}-button--${buttonName} `,\n      name: buttonName,\n      onClick: evt => handlerClick(evt),\n      children: buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), dommage_min && dommage_max && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${buttonClass}-span`,\n      children: [dommage_min, \" - \", dommage_max]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/romu/Desktop/work/monster_slayer3 (copy)/src/components/button/index.tsx"],"names":["React","Button","dommage_min","dommage_max","buttonName","buttonClass","displayAnimation","monsterPv","playerPv","regainMana","begin","end","attack","fireBall","fireCone","ice","heal","monsterCounter","handlerClick","evt","setTimeout","console","log","target","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAoBA,MAAMC,MAAM,GAAG,QAiBD;AAAA,MAjBE;AACdC,IAAAA,WADc;AAEdC,IAAAA,WAFc;AAGdC,IAAAA,UAHc;AAIdC,IAAAA,WAJc;AAKdC,IAAAA,gBALc;AAMdC,IAAAA,SANc;AAOdC,IAAAA,QAPc;AAQdC,IAAAA,UARc;AASdC,IAAAA,KATc;AAUdC,IAAAA,GAVc;AAWdC,IAAAA,MAXc;AAYdC,IAAAA,QAZc;AAadC,IAAAA,QAbc;AAcdC,IAAAA,GAdc;AAedC,IAAAA,IAfc;AAgBdC,IAAAA;AAhBc,GAiBF;;AACZ,QAAMC,YAAY,GAAIC,GAAD,IAAc;AACjC,QAAI,CAACb,gBAAL,EAAuB;AACrB,UAAIC,SAAS,GAAG,CAAZ,IAAiBC,QAAQ,GAAG,CAAhC,EAAmC;AACjCY,QAAAA,UAAU,CAAC,MAAM;AACfX,UAAAA,UAAU;AACb,SAFW,EAEV,OAAO,GAFG,CAAV;AAGH;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAJ,CAAWC,IAAvB,EAA6B,KAA7B;;AACA,UAAIL,GAAG,CAACI,MAAJ,CAAWC,IAAX,KAAoB,OAApB,IAA+BL,GAAG,CAACI,MAAJ,CAAWC,IAAX,KAAoB,QAAvD,EAAiE;AAC/DJ,QAAAA,UAAU,CAAC,MAAM;AACfH,UAAAA,cAAc;AACf,SAFS,EAER,IAFQ,CAAV;AAGD;;AACD,UAAIE,GAAG,CAACI,MAAJ,CAAWC,IAAX,IAAmB,OAAvB,EAAgC;AAC9Bd,QAAAA,KAAK;AACN,OAFD,MAGK,IAAIS,GAAG,CAACI,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AACpCb,QAAAA,GAAG;AACJ,OAFI,MAGA,IAAIQ,GAAG,CAACI,MAAJ,CAAWC,IAAX,IAAmB,MAAvB,EAA+B;AAClCR,QAAAA,IAAI;AACL,OAFI,MAGA,IAAIG,GAAG,CAACI,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AACpCZ,QAAAA,MAAM;AACP,OAFI,MAGA,IAAIO,GAAG,CAACI,MAAJ,CAAWC,IAAX,IAAmB,UAAvB,EAAmC;AACtCX,QAAAA,QAAQ;AACT;AACF;AACF,GA7BC;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAER,WAAY,aAA/B;AAAA,4BACA;AACE,MAAA,SAAS,EAAG,GAAEA,WAAY,WAAUA,WAAY,YAAWD,UAAW,GADxE;AAEE,MAAA,IAAI,EAAEA,UAFR;AAGE,MAAA,OAAO,EAAGe,GAAD,IAASD,YAAY,CAACC,GAAD,CAHhC;AAAA,gBAKKf;AALL;AAAA;AAAA;AAAA;AAAA,YADA,EAQIF,WAAW,IAAIC,WAAhB,iBAAiC;AAAM,MAAA,SAAS,EAAG,GAAEE,WAAY,OAAhC;AAAA,iBAC7BH,WAD6B,SACbC,WADa;AAAA;AAAA;AAAA;AAAA;AAAA,YARpC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9DD;;KAAMF,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React from 'react';\n\ninterface button {\n  dommage_min? :number | string, \n  dommage_max?: number,\n  buttonName: string,\n  buttonClass: string, \n  displayAnimation?: boolean,\n  monsterPv:number,\n  playerPv: number,\n  regainMana : any\n  begin?: any, \n  end? : any,\n  attack?: any,\n  fireBall?: any, \n  fireCone?: any,\n  ice?: any, \n  heal? : any,\n  monsterCounter?:any,\n}\nconst Button = ({\n  dommage_min,\n  dommage_max,\n  buttonName,\n  buttonClass, \n  displayAnimation,\n  monsterPv,\n  playerPv,\n  regainMana,\n  begin,\n  end,\n  attack,\n  fireBall,\n  fireCone,\n  ice,\n  heal,\n  monsterCounter,\n}: button) => {\n  const handlerClick = (evt: any) => {\n    if (!displayAnimation) {\n      if (monsterPv > 0 && playerPv > 0) {\n        setTimeout(() => {\n          regainMana()\n      },1000 * 1.5)\n    }\n    console.log(evt.target.name, 'evt')\n    if (evt.target.name !== 'begin' && evt.target.name !== 'giveUp') {\n      setTimeout(() => {\n        monsterCounter()\n      },1000)\n    }\n    if (evt.target.name == 'begin') {\n      begin()\n    }\n    else if (evt.target.name == 'giveUp') {\n      end()\n    }\n    else if (evt.target.name == 'heal') {\n      heal()\n    }\n    else if (evt.target.name == 'attack') {\n      attack()\n    }\n    else if (evt.target.name == 'fireBall') {\n      fireBall()\n    }\n  }\n}  \n  return (\n    <div className={`${buttonClass}-container `}>\n    <button \n      className={`${buttonClass}-button ${buttonClass}-button--${buttonName} `}\n      name={buttonName}\n      onClick={(evt) => handlerClick(evt)}\n      > \n        {buttonName}\n      </button>\n      {(dommage_min && dommage_max ) && <span className={`${buttonClass}-span`}>\n          {dommage_min} - {dommage_max}\n      </span> }\n    </div>\n  )\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}