{"ast":null,"code":"export const round = function (min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n};\nexport const moving = function (elementToMove, intervalSecond, nameAction, touch) {\n  let start = Date.now();\n  let timer = setInterval(function () {\n    let timePassed = Date.now() - start;\n\n    if (timePassed >= intervalSecond) {\n      clearInterval(timer);\n      setTimeout(() => {\n        elementToMove.style.left = 'inherit';\n        elementToMove.style.right = 'inherit';\n        touch.style.backgroundColor = 'red';\n        setTimeout(() => {\n          touch.style.backgroundColor = 'inherit';\n        }, 50);\n      }, 50);\n    }\n\n    draw(timePassed, elementToMove, nameAction, touch);\n  }, 20);\n};\n\nfunction draw(timePassed, elementToMove, nameAction, touch) {\n  if (nameAction == 'playerAttack') {\n    elementToMove.style.left = timePassed / 5 + 'px';\n  } else if (nameAction = 'monsterAttack') {\n    elementToMove.style.right = timePassed / 5 + 'px';\n  }\n}","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/utils.tsx"],"names":["round","min","max","Math","random","moving","elementToMove","intervalSecond","nameAction","touch","start","Date","now","timer","setInterval","timePassed","clearInterval","setTimeout","style","left","right","backgroundColor","draw"],"mappings":"AACA,OAAO,MAAMA,KAAK,GAAG,UAAUC,GAAV,EAAuBC,GAAvB,EAAmC;AACtD,SAAOC,IAAI,CAACH,KAAL,CAAWG,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD,CAFM;AAIP,OAAO,MAAOI,MAAM,GAAG,UAAWC,aAAX,EAAuCC,cAAvC,EAA+DC,UAA/D,EAAkFC,KAAlF,EAAqG;AAC1H,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AACA,MAAIC,KAAK,GAAGC,WAAW,CAAC,YAAW;AACnC,QAAIC,UAAU,GAAGJ,IAAI,CAACC,GAAL,KAAaF,KAA9B;;AACA,QAAIK,UAAU,IAAIR,cAAlB,EAAkC;AAChCS,MAAAA,aAAa,CAACH,KAAD,CAAb;AACAI,MAAAA,UAAU,CAAC,MAAM;AACfX,QAAAA,aAAa,CAACY,KAAd,CAAoBC,IAApB,GAA0B,SAA1B;AACAb,QAAAA,aAAa,CAACY,KAAd,CAAoBE,KAApB,GAA2B,SAA3B;AACAX,QAAAA,KAAK,CAACS,KAAN,CAAYG,eAAZ,GAA6B,KAA7B;AACAJ,QAAAA,UAAU,CAAC,MAAM;AACfR,UAAAA,KAAK,CAACS,KAAN,CAAYG,eAAZ,GAA6B,SAA7B;AACD,SAFS,EAEP,EAFO,CAAV;AAGD,OAPS,EAOP,EAPO,CAAV;AAOQ;;AACRC,IAAAA,IAAI,CAACP,UAAD,EAAaT,aAAb,EAA4BE,UAA5B,EAAwCC,KAAxC,CAAJ;AACC,GAboB,EAalB,EAbkB,CAAvB;AAcC,CAhBI;;AAkBH,SAASa,IAAT,CAAcP,UAAd,EAAiCT,aAAjC,EAA4DE,UAA5D,EAA+EC,KAA/E,EAAmG;AACnG,MAAKD,UAAU,IAAI,cAAnB,EAAmC;AACjCF,IAAAA,aAAa,CAACY,KAAd,CAAoBC,IAApB,GAA2BJ,UAAU,GAAG,CAAb,GAAiB,IAA5C;AACD,GAFD,MAGK,IAAIP,UAAU,GAAG,eAAjB,EAAkC;AACrCF,IAAAA,aAAa,CAACY,KAAd,CAAoBE,KAApB,GAA4BL,UAAU,GAAG,CAAb,GAAiB,IAA7C;AACD;AACF","sourcesContent":["import { useDispatch } from \"react-redux\";\nexport const round = function (min:number , max:number) {\n  return Math.round(Math.random() * (max - min) + min)\n}\n\nexport const  moving = function  (elementToMove: HTMLElement, intervalSecond: number, nameAction:string, touch:HTMLElement) {\n  let start = Date.now();\n  let timer = setInterval(function() {\n  let timePassed = Date.now() - start;\n  if (timePassed >= intervalSecond) {\n    clearInterval(timer);\n    setTimeout(() => {\n      elementToMove.style.left ='inherit'\n      elementToMove.style.right ='inherit'\n      touch.style.backgroundColor= 'red'\n      setTimeout(() => {\n        touch.style.backgroundColor= 'inherit'\n      }, 50)\n    }, 50);}\n    draw(timePassed, elementToMove, nameAction, touch);\n    }, 20);\n  }\n\n    function draw(timePassed:number, elementToMove:HTMLElement, nameAction:string, touch: HTMLElement) {\n    if ( nameAction == 'playerAttack') {\n      elementToMove.style.left = timePassed / 5 + 'px'\n    }\n    else if (nameAction = 'monsterAttack') {\n      elementToMove.style.right = timePassed / 5 + 'px'\n    }\n  }"]},"metadata":{},"sourceType":"module"}