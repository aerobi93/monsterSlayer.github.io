{"ast":null,"code":"import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK, CHANGE_LEVEL, REGAIN_MANA, CHANGE_DISPLAY_ANIMATION } from '../action';\nimport { monsterArray, round } from '../utils';\nconst initialState = {\n  level: 0,\n  beeingPlaying: false,\n  displayAnimation: false,\n  actualMonster: monsterArray[0],\n  monsterName: '',\n  monsterPvMax: '',\n  monsterPv: '',\n  monsterManaMax: '',\n  monsterMana: '',\n  messageMonster: '',\n  gamerName: '',\n  playerPvMax: 100,\n  playerPv: '',\n  playerManaMax: 100,\n  playerMana: '',\n  dommage: '',\n  lvUpPlayer: 100,\n  messagePlayer: ''\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_GAMER_NAME:\n      return { ...state,\n        gamerName: action.value\n      };\n\n    case BEGIN:\n      return { ...state,\n        beeingPlaying: true,\n        displayAnimation: false,\n        playerPv: state.playerPvMax,\n        playerMana: state.playerManaMax,\n        monsterPv: state.monsterPvMax,\n        monsterMana: state.monsterManaMax\n      };\n\n    case CHANGE_DISPLAY_ANIMATION:\n      return { ...state,\n        displayAnimation: !state.displayAnimation\n      };\n\n    case REGAIN_MANA:\n      return { ...state,\n        monsterMana: state.monsterMana + 5 < state.monsterManaMax ? state.monsterMana + 5 : state.monsterManaMax,\n        playerMana: state.playerMana + 5 < state.playerManaMax ? state.playerMana + 5 : state.playerManaMax\n      };\n\n    case HEAL:\n      {\n        if (action.value == 'player') {\n          return { ...state,\n            playerMana: state.playerMana - 10,\n            playerPv: state.playerPv + Math.floor(15 * state.lvUpPlayer / 100) >= state.playerPvMax ? state.playerPvMax : state.playerPv + Math.floor(15 * state.lvUpPlayer / 100),\n            messagePlayer: state.playerPv + Math.floor(15 * state.lvUpPlayer / 100) >= state.playerPvMax ? 'vous avez recuperez' + (state.playerPvMax - state.playerPv) + 'pv' : 'vous avez recuperez' + Math.floor(15 * state.lvUpPlayer / 100) + 'pv'\n          };\n        }\n\n        if (action.value == 'monster') {\n          return { ...state,\n            monsterMana: state.monsterMana - 10,\n            monsterPv: state.monsterPv + state.actualMonster.heal >= state.monsterPvMax ? state.monsterPvMax : state.monsterPv + state.actualMonster.heal,\n            messageMonster: state.monsterPv + state.actualMonster.heal >= state.monsterPvMax ? 'le monstre  a recuperer' + (state.monsterPvMax - state.monsterPv) + 'pv' : 'le monstre  a recuperer' + state.actualMonster.heal + 'pv'\n          };\n        }\n      }\n\n    case ATTACK:\n      {\n        if (action.attacker == 'player') {\n          let dommageInflige = round(3, 10);\n          return { ...state,\n            dommage: dommageInflige,\n            monsterPV: state.monsterPV - dommageInflige * state.lvUpPlayer / 100 < 0 ? state.monsterPV - dommageInflige * state.lvUpPlayer / 100 : 0\n          };\n        }\n      }\n\n    case CHANGE_LEVEL:\n      return { ...state,\n        level: state.level + 1,\n        lvUpPlayer: state.lvUpPlayer + 20,\n        playerPvMax: state.playerPvMax + 20,\n        playerManaMax: state.playerPvMax + 20,\n        monsterPv: monsterArray[state.level + 1].pvMax,\n        monsterPvMax: monsterArray[state.level + 1].pvMax,\n        monsterMana: monsterArray[state.level + 1].manaMax,\n        monsterManaMax: monsterArray[state.level + 1].manaMax,\n        monsterName: monsterArray[state.level + 1].name,\n        messagePlayer: '',\n        messageMonster: '',\n        displayAnimation: false\n      };\n\n    case END:\n      return { ...state,\n        level: 0,\n        gamerName: '',\n        monsterName: monsterArray[0],\n        beeingPlaying: false,\n        displayAnimation: false,\n        monsterPvMax: 100,\n        monsterPv: 100,\n        playerPvMax: 100,\n        playerPv: 100,\n        monsterManaMax: 100,\n        monsterMana: 100,\n        playerManaMax: 100,\n        playerMana: 100\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/romu/Desktop/work/monster_slayer3 (copy)/src/reducers/index.tsx"],"names":["SET_GAMER_NAME","BEGIN","END","HEAL","ATTACK","CHANGE_LEVEL","REGAIN_MANA","CHANGE_DISPLAY_ANIMATION","monsterArray","round","initialState","level","beeingPlaying","displayAnimation","actualMonster","monsterName","monsterPvMax","monsterPv","monsterManaMax","monsterMana","messageMonster","gamerName","playerPvMax","playerPv","playerManaMax","playerMana","dommage","lvUpPlayer","messagePlayer","reducer","state","action","type","value","Math","floor","heal","attacker","dommageInflige","monsterPV","pvMax","manaMax","name"],"mappings":"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","sourcesContent":["import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK, CHANGE_LEVEL, REGAIN_MANA, CHANGE_DISPLAY_ANIMATION } from '../action'\nimport { monsterArray, round } from '../utils'\n\nconst initialState = {\n  level : 0,\n  beeingPlaying : false,\n  displayAnimation:false,\n  actualMonster : monsterArray[0],\n  monsterName:  '',\n  monsterPvMax: '',\n  monsterPv: '',\n  monsterManaMax: '',\n  monsterMana:'',\n  messageMonster: '',\n  gamerName:'',\n  playerPvMax: 100,\n  playerPv: '',\n  playerManaMax: 100,\n  playerMana: '',\n  dommage:'',\n  lvUpPlayer: 100,\n  messagePlayer: '', \n};\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case SET_GAMER_NAME:\n      return {\n        ...state,\n        gamerName : action.value\n      }\n    case BEGIN: \n     return {\n       ...state, \n       beeingPlaying: true,\n       displayAnimation:false,\n       playerPv: state.playerPvMax,\n       playerMana: state.playerManaMax,\n       monsterPv : state.monsterPvMax,\n       monsterMana: state.monsterManaMax,\n     }\n     case CHANGE_DISPLAY_ANIMATION: \n      return {\n        ...state,\n        displayAnimation : !state.displayAnimation\n      }\n     case REGAIN_MANA: \n      return {\n        ...state,\n        monsterMana :state.monsterMana +5 < state.monsterManaMax ? state.monsterMana + 5 : state.monsterManaMax,\n        playerMana: state.playerMana + 5 < state.playerManaMax ?  state.playerMana + 5 : state.playerManaMax\n      } \n     case HEAL: {\n       if (action.value == 'player') {\n       return {\n        ...state,\n          playerMana : state.playerMana - 10,\n          playerPv: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ?\n          state.playerPvMax: \n          state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100),\n          messagePlayer: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ? \n          'vous avez recuperez' + (state.playerPvMax  - state.playerPv) + 'pv' : \n          'vous avez recuperez' + Math.floor(15 * ( state.lvUpPlayer) /100) + 'pv'\n        }\n     }\n     if (action.value == 'monster') {\n      return {\n        ...state,\n        monsterMana : state.monsterMana - 10,\n        monsterPv: state.monsterPv + state.actualMonster.heal >= state.monsterPvMax ?\n        state.monsterPvMax: \n        state.monsterPv + state.actualMonster.heal,\n        messageMonster: state.monsterPv + state.actualMonster.heal >= state.monsterPvMax ? \n        'le monstre  a recuperer' + (state.monsterPvMax  - state.monsterPv) + 'pv' : \n        'le monstre  a recuperer' + state.actualMonster.heal + 'pv'\n      }\n    }\n    }\n      \n      case ATTACK: {\n        if (action.attacker == 'player') {\n          let dommageInflige = round(3,10)\n          return {\n            ...state,\n            dommage: dommageInflige,\n            monsterPV: state.monsterPV - ((dommageInflige * state.lvUpPlayer) /100) < 0 ?\n            state.monsterPV - ((dommageInflige * state.lvUpPlayer) /100) :\n            0 \n          }\n        }\n      }\n      case CHANGE_LEVEL: \n        return {\n          ...state,\n          level: state.level + 1,\n          lvUpPlayer: state.lvUpPlayer + 20,\n          playerPvMax : state.playerPvMax + 20,\n          playerManaMax : state.playerPvMax + 20,\n          monsterPv: monsterArray[state.level + 1].pvMax,\n          monsterPvMax: monsterArray[state.level + 1].pvMax,\n          monsterMana : monsterArray[state.level + 1].manaMax,\n          monsterManaMax : monsterArray[state.level + 1].manaMax,\n          monsterName: monsterArray[state.level + 1].name,\n          messagePlayer: '',\n          messageMonster : '', \n          displayAnimation : false\n        }\n      case END :\n        return {\n          ...state,\n          level : 0,\n          gamerName:'',\n          monsterName: monsterArray[0],\n          beeingPlaying : false,\n          displayAnimation:false,\n          monsterPvMax: 100,\n          monsterPv: 100, \n          playerPvMax: 100,\n          playerPv: 100,\n          monsterManaMax: 100,\n          monsterMana: 100, \n          playerManaMax: 100,\n          playerMana: 100, \n       }\n    default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}