{"ast":null,"code":"import { connect } from \"react-redux\";\nimport store from '../../store';\nimport Button from \"../../components/button\";\nimport { round, moving } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal, fireBall, lostMana, reportBattle, changeDisplayAnimation } from '../../action';\n\nconst mapStateToProps = state => ({\n  displayAnimation: state.displayAnimation,\n  monsterPv: state.monsterPv,\n  playerPv: state.playerPv\n});\n\nconst mapDispatchToProps = (dispatch, state) => ({\n  regainMana: () => {\n    setTimeout(() => {\n      dispatch(regainMana());\n    }, 1000 * 2.1);\n  },\n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \");\n\n    if (result) {\n      var _result$match;\n\n      let regex = /[a-zA-Z0-9]/g;\n\n      if (((_result$match = result.match(regex)) === null || _result$match === void 0 ? void 0 : _result$match.length) === result.length) {\n        dispatch(setGamerName(result.trim()));\n        dispatch(begin());\n      } else if (result.match(regex).length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux');\n      }\n    } else alert('une erreur est survenue');\n  },\n  attack: () => {\n    let playerDiv = document.getElementById(store.getState().gamerName);\n    dispatch(changeDisplayAnimation());\n    moving(playerDiv, 'draw', 1000, 'player');\n    setTimeout(() => {\n      dispatch(reportBattle('messageMonster'));\n      dispatch(attack('player'));\n    }, 1000);\n  },\n  fireBall: () => {\n    let fireBallPlayer = document.getElementById('fireBall-' + store.getState().gamerName);\n    dispatch(changeDisplayAnimation());\n\n    if (store.getState().playerMana - 20 < 0) {\n      moving(fireBallPlayer, 'fireBall', 400, 'player');\n      setTimeout(() => {\n        alert(\"le sort a echouer\");\n      }, 400);\n    } else {\n      moving(fireBallPlayer, 'fireBall', 1000, 'player');\n      dispatch(lostMana('playerMana', 20));\n      setTimeout(() => {\n        dispatch(fireBall('player'));\n      }, 1000);\n    }\n  },\n  heal: () => {\n    let starPlayer = document.getElementById('star-' + store.getState().gamerName);\n    dispatch(changeDisplayAnimation());\n    moving(starPlayer, 'heal', 1000, 'player');\n    dispatch(lostMana('playerMana', 10));\n    setTimeout(() => {\n      dispatch(heal('player'));\n    }, 1000);\n  },\n  fireCone: value => {\n    let start = Date.now();\n    let timer = setInterval(function () {\n      let timePassed = Date.now() - start;\n      console.log(value);\n      console.log(timePassed);\n\n      if (value || timePassed > 1000) {\n        console.log(value);\n        clearInterval(timer);\n      }\n    }, 20);\n  },\n  monsterCounter: () => {\n    setTimeout(() => {}, 150);\n    let random = round(1, 3);\n    let monsterDiv = document.getElementById(store.getState().monsterName);\n    dispatch(changeDisplayAnimation());\n\n    if (random == 1) {\n      moving(monsterDiv, 'draw', 1000, 'monster');\n      setTimeout(() => {\n        dispatch(reportBattle('messagePlayer'));\n        dispatch(attack('monster'));\n      }, 1000);\n    } else if (random == 2 && store.getState().monsterMana - 20 > 0) {\n      let fireBallMonster = document.getElementById('fireBall-' + store.getState().monsterName);\n      moving(fireBallMonster, 'fireBall', 1000, 'monster');\n      dispatch(lostMana('monsterMana', 20));\n      setTimeout(() => {\n        dispatch(fireBall('monster'));\n      }, 1000);\n    } else if (random == 3 && store.getState().monsterMana - 10 > 0) {\n      let starMonster = document.getElementById('star-' + store.getState().monsterName);\n      dispatch(changeDisplayAnimation());\n      moving(starMonster, 'heal', 1000, 'monster');\n      dispatch(lostMana('monsterMana', 10));\n      setTimeout(() => {\n        dispatch(heal('monster'));\n      }, 1000);\n    } else {\n      moving(monsterDiv, 'draw', 1000, 'monster');\n      setTimeout(() => {\n        dispatch(reportBattle('messagePlayer'));\n        dispatch(attack('monster'));\n      }, 1000);\n    }\n  },\n  end: () => {\n    let flexButton = document.querySelector('.allDivButton');\n\n    if (flexButton) {\n      flexButton.style.top = '12rem';\n    }\n\n    dispatch(end());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/home/romu/Desktop/work/monster_slayer3 (copy)/src/container/button/index.tsx"],"names":["connect","store","Button","round","moving","regainMana","begin","end","setGamerName","attack","heal","fireBall","lostMana","reportBattle","changeDisplayAnimation","mapStateToProps","state","displayAnimation","monsterPv","playerPv","mapDispatchToProps","dispatch","setTimeout","result","prompt","regex","match","length","trim","alert","playerDiv","document","getElementById","getState","gamerName","fireBallPlayer","playerMana","starPlayer","fireCone","value","start","Date","now","timer","setInterval","timePassed","console","log","clearInterval","monsterCounter","random","monsterDiv","monsterName","monsterMana","fireBallMonster","starMonster","flexButton","querySelector","style","top"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport store from '../../store'\nimport Button from \"../../components/button\";\nimport { round, moving } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal, fireBall, fireCone, ice, lostMana, reportBattle, changeDisplayAnimation} from '../../action'\n\n\nconst mapStateToProps = (state : any) => ({\n  displayAnimation : state.displayAnimation,\n  monsterPv: state.monsterPv,\n  playerPv: state.playerPv,\n})\nconst mapDispatchToProps = (dispatch: any, state: any) => ({ \n  \n  regainMana : () => {\n    setTimeout(()=> {\n      dispatch(regainMana())\n    }, 1000 * 2.1)\n  },\n  \n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \")\n    if (result) {\n      let regex = /[a-zA-Z0-9]/g \n      if (result.match(regex)?.length === result.length){\n        dispatch(setGamerName(result.trim()))\n        dispatch(begin())\n      }\n      else if (result.match(regex)!.length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux')\n      }\n    }\n    else alert('une erreur est survenue')\n  },\n  \n  attack: () => {\n    let playerDiv: HTMLElement | null = document.getElementById(store.getState().gamerName)\n    dispatch(changeDisplayAnimation())\n    moving(playerDiv!, 'draw', 1000, 'player')\n    setTimeout(()=> {\n      dispatch(reportBattle('messageMonster'))\n      dispatch(attack('player'))\n    },1000)\n  },\n\n  fireBall: () => {\n    let fireBallPlayer:HTMLElement | null = document.getElementById('fireBall-'+store.getState().gamerName)\n    dispatch(changeDisplayAnimation())\n    if (store.getState().playerMana - 20 < 0) {\n      moving(fireBallPlayer!, 'fireBall', 400, 'player')\n      setTimeout(() => {\n        alert(\"le sort a echouer\")\n      }, 400);\n    }   \n    else {\n      moving(fireBallPlayer!, 'fireBall', 1000, 'player')\n      dispatch(lostMana('playerMana', 20))\n      setTimeout(() => {\n          dispatch(fireBall('player'))\n      }, 1000);  \n    }\n  },\n  heal : () => {\n    let starPlayer: HTMLElement | null = document.getElementById('star-'+store.getState().gamerName)\n    dispatch(changeDisplayAnimation())\n    moving(starPlayer!, 'heal', 1000, 'player')\n    dispatch(lostMana('playerMana', 10))\n    setTimeout(() => {\n        dispatch(heal('player'))\n    }, 1000);  \n  }, \n\n  fireCone : (value : boolean) => {\n    let start = Date.now();\n    let timer = setInterval(function() {\n      let timePassed = Date.now() - start;  \n      console.log(value)\n      console.log(timePassed)\n      if(value || timePassed > 1000) {\n        console.log(value)\n        clearInterval(timer)\n      }\n    },20)\n  },\n  monsterCounter: () => {\n    setTimeout(() => {\n    }, 150 )\n    let random = round(1,3)\n    let monsterDiv: HTMLElement | null = document.getElementById(store.getState().monsterName)\n    dispatch(changeDisplayAnimation())\n   \n    if (random == 1) {\n      moving(monsterDiv!, 'draw', 1000, 'monster') \n        setTimeout(()=> {\n        dispatch(reportBattle('messagePlayer'))\n        dispatch(attack('monster'))\n      },1000)\n    }\n    else if (random == 2 && (store.getState().monsterMana - 20) > 0 ) {\n      let fireBallMonster:HTMLElement | null = document.getElementById('fireBall-'+store.getState().monsterName)\n      moving(fireBallMonster!, 'fireBall', 1000, 'monster')  \n      dispatch(lostMana('monsterMana', 20))\n      setTimeout(()=> {\n        dispatch(fireBall('monster'))\n      }, 1000) \n    }\n    else if (random == 3 && (store.getState().monsterMana - 10) > 0 ) {\n      let starMonster: HTMLElement | null = document.getElementById('star-'+store.getState().monsterName)\n      dispatch(changeDisplayAnimation())\n      moving(starMonster!, 'heal', 1000, 'monster')\n      dispatch(lostMana('monsterMana', 10))\n      setTimeout(() => {\n          dispatch(heal('monster'))\n      }, 1000);  \n    }\n    else {\n      moving(monsterDiv!, 'draw', 1000, 'monster')\n      setTimeout(()=> {\n        dispatch(reportBattle('messagePlayer'))\n        dispatch(attack('monster'))\n      },1000)\n    }\n  },\n\n  end: () => {\n    let flexButton: HTMLElement | null = document.querySelector('.allDivButton')\n    if (flexButton) {\n       flexButton.style.top = '12rem'\n    }\n      dispatch(end())\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Button)"]},"metadata":{},"sourceType":"module"}