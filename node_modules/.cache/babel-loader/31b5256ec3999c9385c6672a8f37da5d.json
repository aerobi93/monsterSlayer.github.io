{"ast":null,"code":"var _jsxFileName = \"/home/rom/Desktop/reactBulder/monster_slayer3_react/src/components/button/index.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    buttonName,\n    buttonClass,\n    displayAnimation,\n    begin,\n    end,\n    attack,\n    magicFire,\n    heal\n  } = _ref;\n\n  const handlerClick = evt => {\n    if (evt.target.name == 'begin') {\n      begin();\n    }\n\n    if (evt.target.name == 'giveUp') {\n      end();\n    }\n\n    if (evt.target.name == 'attack' || evt.target.name == 'magicFire') {\n      attack(evt.target.name);\n    }\n\n    if (evt.target.name == 'heal') {\n      heal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${buttonClass}-button ${buttonClass}-button--${buttonName} `,\n    name: buttonName,\n    onClick: evt => handlerClick(evt),\n    children: buttonName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/components/button/index.tsx"],"names":["Button","buttonName","buttonClass","displayAnimation","begin","end","attack","magicFire","heal","handlerClick","evt","target","name"],"mappings":";;;AAWA,MAAMA,MAAM,GAAG,QASD;AAAA,MATE;AACdC,IAAAA,UADc;AAEdC,IAAAA,WAFc;AAGdC,IAAAA,gBAHc;AAIdC,IAAAA,KAJc;AAKdC,IAAAA,GALc;AAMdC,IAAAA,MANc;AAOdC,IAAAA,SAPc;AAQdC,IAAAA;AARc,GASF;;AACZ,QAAMC,YAAY,GAAIC,GAAD,IAAc;AACjC,QAAIA,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,OAAvB,EAAgC;AAC9BR,MAAAA,KAAK;AACN;;AACD,QAAIM,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AAC/BP,MAAAA,GAAG;AACJ;;AACD,QAAIK,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,QAAnB,IAA+BF,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,WAAtD,EAAmE;AACjEN,MAAAA,MAAM,CAACI,GAAG,CAACC,MAAJ,CAAWC,IAAZ,CAAN;AACD;;AACD,QAAIF,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,MAAvB,EAA+B;AAC7BJ,MAAAA,IAAI;AACL;AACF,GAbD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEN,WAAY,WAAUA,WAAY,YAAWD,UAAW,GADxE;AAEE,IAAA,IAAI,EAAEA,UAFR;AAGE,IAAA,OAAO,EAAGS,GAAD,IAASD,YAAY,CAACC,GAAD,CAHhC;AAAA,cAKKT;AALL;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjCD;;KAAMD,M;AAmCN,eAAeA,MAAf","sourcesContent":["import react from 'react'\ninterface button {\n  buttonName: string,\n  buttonClass: string, \n  displayAnimation?: boolean,\n  begin?: any, \n  end? : any,\n  attack?: any,\n  magicFire?: any\n  heal? : any\n}\nconst Button = ({\n  buttonName,\n  buttonClass, \n  displayAnimation,\n  begin,\n  end,\n  attack,\n  magicFire,\n  heal\n}: button) => {\n  const handlerClick = (evt: any) => {\n    if (evt.target.name == 'begin') {\n      begin()\n    }\n    if (evt.target.name == 'giveUp') {\n      end()\n    }\n    if (evt.target.name == 'attack' || evt.target.name == 'magicFire') {\n      attack(evt.target.name)\n    }\n    if (evt.target.name == 'heal') {\n      heal()\n    }\n  }  \n  return (\n    <button \n      className={`${buttonClass}-button ${buttonClass}-button--${buttonName} `}\n      name={buttonName}\n      onClick={(evt) => handlerClick(evt)}\n      >\n        {buttonName}\n      </button>\n  )\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}