{"ast":null,"code":"import { connect } from \"react-redux\";\nimport store from '../../store';\nimport Button from \"../../components/button\";\nimport { round } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal } from '../../action';\n\nconst mapStateToProps = state => ({\n  displayAnamimation: state.displayAnimation\n});\n\nconst mapDispatchToProps = displatch => ({\n  regainMana: () => {\n    setTimeout(() => {\n      displatch(regainMana());\n    }, 1000 * 1.5);\n  },\n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \");\n\n    if (result) {\n      var _result$match;\n\n      let regex = /[a-zA-Z0-9]/g;\n      console.log(result, result.match(regex));\n\n      if (((_result$match = result.match(regex)) === null || _result$match === void 0 ? void 0 : _result$match.length) === result.length) {\n        displatch(setGamerName(result.trim()));\n        displatch(begin());\n      } else if (result.match(regex).length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux');\n      }\n    } else alert('une erreur est survenue');\n  },\n  end: () => {\n    displatch(end());\n  },\n  attack: (value, attacker, dommage) => {\n    let playerDiv = document.getElementById(store.getState().gamerName);\n    console.log(playerDiv);\n    let dommageInflige;\n    let manaConsume;\n    value == 'attack' ? dommageInflige = round(3, 10) : dommageInflige = round(10, 15);\n    value == 'magicFire' ? manaConsume = 20 : '';\n\n    if (manaConsume && store.getState().playerMana - 20 < 0) {\n      alert(\"vos n avez plus assez de mana votre sort a echouer\");\n    } else if (manaConsume && store.getState().playerMana - 20 > 0) {\n      displatch(attack('player', dommageInflige, manaConsume));\n    } else if (!manaConsume) {\n      displatch(attack('player', dommageInflige));\n    }\n\n    if (store.getState().monsterPv > 0) setTimeout(() => {\n      displatch(attack('monster'));\n    }, 1000 * 1.5);\n  },\n  heal: () => {\n    if (store.getState().playerMana - 10 < 0) {\n      alert(\"vos n avez plus assez de mana votre sort a echouer\");\n    } else if (store.getState().playerMana - 10 > 0) {\n      displatch(heal());\n    }\n\n    setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0));\n    }, 1000 * 1.5);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/container/button/index.tsx"],"names":["connect","store","Button","round","regainMana","begin","end","setGamerName","attack","heal","mapStateToProps","state","displayAnamimation","displayAnimation","mapDispatchToProps","displatch","setTimeout","result","prompt","regex","console","log","match","length","trim","alert","value","attacker","dommage","playerDiv","document","getElementById","getState","gamerName","dommageInflige","manaConsume","playerMana","monsterPv"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport store from '../../store'\nimport Button from \"../../components/button\";\nimport { round, moving } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal } from '../../action'\n\nconst mapStateToProps = (state : any) => ({\n  displayAnamimation : state.displayAnimation,\n})\nconst mapDispatchToProps = (displatch: any) => ({ \n  regainMana : () => {\n    setTimeout(()=> {\n      displatch(regainMana())\n    }, 1000 *1.5)\n  },\n  \n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \")\n    if (result) {\n      let regex = /[a-zA-Z0-9]/g \n      console.log(result, result.match(regex))\n      if (result.match(regex)?.length === result.length){\n        displatch(setGamerName(result.trim()))\n        displatch(begin())\n      }\n      else if (result.match(regex)!.length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux')\n      }\n    }\n    else alert('une erreur est survenue')\n  },\n  end: () => {\n      displatch(end())\n  },\n\n  attack: (value: string, attacker:string, dommage:number) => {\n    let playerDiv = document.getElementById(store.getState().gamerName)\n    console.log(playerDiv) \n    let dommageInflige: number\n    let manaConsume:number | undefined\n    value== 'attack' ? dommageInflige = round(3, 10) : dommageInflige =  round(10, 15)\n    value== 'magicFire' ? manaConsume = 20 : ''\n    if (manaConsume  && store.getState().playerMana -20 < 0) {\n      alert(\"vos n avez plus assez de mana votre sort a echouer\")\n    }\n    else if ( manaConsume && store.getState().playerMana -20 > 0)  {\n      displatch(attack('player', dommageInflige, manaConsume)) \n     }\n    else if (!manaConsume) {\n      displatch(attack('player', dommageInflige)) \n    } \n    if (store.getState().monsterPv > 0)\n    setTimeout(() => {\n      displatch(attack('monster'))\n    }, 1000 * 1.5)\n  },\n\n  heal: () => {\n    if (store.getState().playerMana - 10 < 0) {\n      alert(\"vos n avez plus assez de mana votre sort a echouer\")\n    }\n    else if ((store.getState().playerMana - 10 > 0 ) ){\n       displatch(heal())\n    }\n    setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0))\n    }, 1000 * 1.5)\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Button)"]},"metadata":{},"sourceType":"module"}