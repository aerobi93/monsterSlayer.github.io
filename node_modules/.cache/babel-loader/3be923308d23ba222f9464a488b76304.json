{"ast":null,"code":"import { BEGIN, HEAL, ATTACK } from '../action';\nconst initialState = {\n  level: 0,\n  monsterPv: 100,\n  playerPv: 100,\n  playerName: 'rom',\n  dommage: '',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: false,\n  animationBegin: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case BEGIN:\n      {\n        return { ...state,\n          gameBegining: action.value,\n          playerPv: 100,\n          monsterPv: 100,\n          messageDommageMonster: '',\n          messageDommagePlayer: ''\n        };\n      }\n\n    case HEAL:\n      {\n        return { ...state,\n          playerPv: state.playerPv + 10 > 100 ? 100 : state.player + 10,\n          messageDommagePlayer: 'vous avez recuperer 10 pv'\n        };\n      }\n\n    case ATTACK:\n      {\n        console.log('dommage');\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/reducers/index.js"],"names":["BEGIN","HEAL","ATTACK","initialState","level","monsterPv","playerPv","playerName","dommage","messageDommageMonster","messageDommagePlayer","gameBegining","animationBegin","reducer","state","action","type","value","player","console","log"],"mappings":"AAAA,SAAUA,KAAV,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAqC,WAArC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CADW;AAEnBC,EAAAA,SAAS,EAAG,GAFO;AAGnBC,EAAAA,QAAQ,EAAG,GAHQ;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,qBAAqB,EAAE,EANJ;AAOnBC,EAAAA,oBAAoB,EAAE,EAPH;AAQnBC,EAAAA,YAAY,EAAC,KARM;AASnBC,EAAAA,cAAc,EAAG;AATE,CAArB;;AAaE,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BX,YAA8B;AAAA,MAAhBY,MAAgB,uEAAP,EAAO;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKhB,KAAL;AAAY;AACV,eAAO,EACL,GAAGc,KADE;AAELH,UAAAA,YAAY,EAAEI,MAAM,CAACE,KAFhB;AAGLX,UAAAA,QAAQ,EAAG,GAHN;AAILD,UAAAA,SAAS,EAAE,GAJN;AAKLI,UAAAA,qBAAqB,EAAE,EALlB;AAMLC,UAAAA,oBAAoB,EAAE;AANjB,SAAP;AAQD;;AACD,SAAKT,IAAL;AAAW;AACT,eAAO,EACL,GAAGa,KADE;AAENR,UAAAA,QAAQ,EAAGQ,KAAK,CAACR,QAAN,GAAiB,EAAjB,GAAsB,GAAtB,GAA4B,GAA5B,GAAkCQ,KAAK,CAACI,MAAN,GAAe,EAFtD;AAGNR,UAAAA,oBAAoB,EAAE;AAHhB,SAAP;AAKD;;AACD,SAAKR,MAAL;AAAa;AACXiB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACC;AAAS,aAAON,KAAP;AArBb;AAuBD,CAxBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import {  BEGIN,  HEAL, ATTACK} from '../action'\n\nconst initialState = {\n  level : 0,\n  monsterPv : 100,\n  playerPv : 100,\n  playerName: 'rom',\n  dommage: '',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining:false,\n  animationBegin : false\n\n  };\n  \n  const reducer = (state = initialState, action = {}) => {\n    switch(action.type) {\n      case BEGIN: {\n        return {\n          ...state,\n          gameBegining: action.value,\n          playerPv : 100,\n          monsterPv :100 ,\n          messageDommageMonster: '',\n          messageDommagePlayer: '',\n        }\n      }\n      case HEAL: {\n        return {\n          ...state,\n         playerPv : state.playerPv + 10 > 100 ? 100 : state.player + 10 ,\n         messageDommagePlayer: 'vous avez recuperer 10 pv'\n        }\n      }\n      case ATTACK: {\n        console.log('dommage')\n      }\n        default: return state\n    }\n  }\n  export default reducer"]},"metadata":{},"sourceType":"module"}