{"ast":null,"code":"import { BEGIN, LEVEL_UP, END, HEAL, ATTACK, CHANGE_DISPLAY_ANIMATION } from '../action';\nconst initialState = {\n  level: 0,\n  monsterPv: 100,\n  playerPv: 100,\n  playerName: 'rom',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: false,\n  displayAnimation: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case BEGIN:\n      return { ...state,\n        gameBegining: true,\n        playerPv: 100,\n        monsterPv: 100,\n        messageDommageMonster: '',\n        messageDommagePlayer: ''\n      };\n\n    case LEVEL_UP:\n      return { ...state,\n        level: state.level + 1\n      };\n\n    case END:\n      return { ...state,\n        gameBegining: false,\n        playerPv: 100,\n        monsterPv: 100,\n        messageDommageMonster: '',\n        messageDommagePlayer: ''\n      };\n\n    case HEAL:\n      return { ...state,\n        messageDommagePlayer: 'vous avez recupere ' + (state.playerPv + 10 >= 100 ? 100 - state.playerPv : 10) + ' pv',\n        playerPv: state.playerPv + 10 >= 100 ? 100 : state.playerPv + 10\n      };\n\n    case ATTACK:\n      {\n        return { ...state,\n          [action.player]: +[state[action.player]] - action.value < 0 ? 0 : +[state[action.player]] - action.value,\n          [action.message]: 'vous avez recu ' + action.value + ' de dommage'\n        };\n      }\n\n    case CHANGE_DISPLAY_ANIMATION:\n      return { ...state,\n        displayAnimation: !state.displayAnimation\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/reducers/index.tsx"],"names":["BEGIN","LEVEL_UP","END","HEAL","ATTACK","CHANGE_DISPLAY_ANIMATION","initialState","level","monsterPv","playerPv","playerName","messageDommageMonster","messageDommagePlayer","gameBegining","displayAnimation","reducer","state","action","type","player","value","message"],"mappings":"AAAA,SAAUA,KAAV,EAAiBC,QAAjB,EAA2BC,GAA3B,EAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,wBAA/C,QAA8E,WAA9E;AAEA,MAAMC,YAAY,GAAG;AACrBC,EAAAA,KAAK,EAAG,CADa;AAErBC,EAAAA,SAAS,EAAG,GAFS;AAGrBC,EAAAA,QAAQ,EAAG,GAHU;AAIrBC,EAAAA,UAAU,EAAE,KAJS;AAKrBC,EAAAA,qBAAqB,EAAE,EALF;AAMrBC,EAAAA,oBAAoB,EAAE,EAND;AAOrBC,EAAAA,YAAY,EAAC,KAPQ;AAQrBC,EAAAA,gBAAgB,EAAE;AARG,CAArB;;AAYA,MAAMC,OAAO,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAnCV,YAAmC;AAAA,MAArBW,MAAqB,uEAAR,EAAQ;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKlB,KAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELH,QAAAA,YAAY,EAAE,IAFT;AAGLJ,QAAAA,QAAQ,EAAG,GAHN;AAILD,QAAAA,SAAS,EAAE,GAJN;AAKLG,QAAAA,qBAAqB,EAAE,EALlB;AAMLC,QAAAA,oBAAoB,EAAE;AANjB,OAAP;;AAQF,SAAKX,QAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAKL,GAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELH,QAAAA,YAAY,EAAE,KAFT;AAGLJ,QAAAA,QAAQ,EAAG,GAHN;AAILD,QAAAA,SAAS,EAAE,GAJN;AAKLG,QAAAA,qBAAqB,EAAE,EALlB;AAMLC,QAAAA,oBAAoB,EAAE;AANjB,OAAP;;AAQF,SAAKT,IAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,oBAAoB,EAAE,yBAAyBI,KAAK,CAACP,QAAN,GAAiB,EAAjB,IAAuB,GAAvB,GAA6B,MAAMO,KAAK,CAACP,QAAzC,GAAqD,EAA9E,IAAoF,KAFrG;AAGLA,QAAAA,QAAQ,EAAGO,KAAK,CAACP,QAAN,GAAiB,EAAjB,IAAuB,GAAvB,GAA6B,GAA7B,GAAmCO,KAAK,CAACP,QAAN,GAAiB;AAH1D,OAAP;;AAKF,SAAKL,MAAL;AAAa;AACX,eAAO,EACL,GAAGY,KADE;AAEL,WAACC,MAAM,CAACE,MAAR,GAAiB,CAAC,CAACH,KAAK,CAACC,MAAM,CAACE,MAAR,CAAN,CAAD,GAA0BF,MAAM,CAACG,KAAjC,GAAyC,CAAzC,GAA6C,CAA7C,GAAiD,CAAC,CAACJ,KAAK,CAACC,MAAM,CAACE,MAAR,CAAN,CAAD,GAA0BF,MAAM,CAACG,KAF9F;AAGL,WAACH,MAAM,CAACI,OAAR,GAAkB,oBAAoBJ,MAAM,CAACG,KAA3B,GAAoC;AAHjD,SAAP;AAKD;;AACD,SAAKf,wBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,gBAAgB,EAAE,CAACE,KAAK,CAACF;AAFpB,OAAP;;AAIA;AAAS,aAAOE,KAAP;AA1Cb;AA4CD,CA7CD;;AA8CA,eAAeD,OAAf","sourcesContent":["import {  BEGIN, LEVEL_UP, END,  HEAL, ATTACK, CHANGE_DISPLAY_ANIMATION} from '../action'\n\nconst initialState = {\nlevel : 0,\nmonsterPv : 100,\nplayerPv : 100,\nplayerName: 'rom',\nmessageDommageMonster: '',\nmessageDommagePlayer: '',\ngameBegining:false,\ndisplayAnimation :false,\n\n};\n\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case BEGIN:\n      return {\n        ...state,\n        gameBegining: true,\n        playerPv : 100,\n        monsterPv :100 ,\n        messageDommageMonster: '',\n        messageDommagePlayer: '',\n      }\n    case LEVEL_UP :\n      return {\n        ...state,\n        level: state.level + 1\n      }\n    case END:\n      return {\n        ...state,\n        gameBegining: false,\n        playerPv : 100,\n        monsterPv :100 ,\n        messageDommageMonster: '',\n        messageDommagePlayer: '',\n      }\n    case HEAL:\n      return {\n        ...state,\n        messageDommagePlayer: 'vous avez recupere ' + (state.playerPv + 10 >= 100 ? 100 - state.playerPv  : 10) + ' pv',\n        playerPv : state.playerPv + 10 >= 100 ? 100 : state.playerPv + 10 ,\n      }\n    case ATTACK: {\n      return {\n        ...state,\n        [action.player]: +[state[action.player]] - action.value < 0 ? 0 : +[state[action.player]] - action.value,\n        [action.message]: 'vous avez recu ' + action.value  + ' de dommage'\n      }\n    }\n    case CHANGE_DISPLAY_ANIMATION: \n      return {\n        ...state, \n        displayAnimation: !state.displayAnimation\n      }\n      default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}