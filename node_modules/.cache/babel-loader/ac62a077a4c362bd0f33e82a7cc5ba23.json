{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Button from \"../../componants/buttons\";\nimport { begin, heal } from '../../action';\n\nconst mapStateToProps = () => ({});\n\nconst mapStateToDispatch = dispatch => ({\n  buttonAction: value => {\n    if (value == 'begin' || value == 'giveUp') {\n      let display = value == 'begin' ? true : false;\n      dispatch(begin(display));\n    } else if (value == 'heal') {\n      dispatch(heal());\n    } else if (value == 'attack' || value == 'specialAttack') {\n      let DivFlexLives = document.querySelector('.flexLives');\n      let playerPicture = DivFlexLives.children[0].children[0];\n      let monsterPicture = DivFlexLives.children[1].children[0];\n    }\n  }\n});\n\nexport default connect(mapStateToProps, mapStateToDispatch)(Button);","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/container/button/index.tsx"],"names":["connect","Button","begin","heal","mapStateToProps","mapStateToDispatch","dispatch","buttonAction","value","display","DivFlexLives","document","querySelector","playerPicture","children","monsterPicture"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAAoC,cAApC;;AAGA,MAAMC,eAAe,GAAC,OAAO,EAAP,CAAtB;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmB;AAC1CC,EAAAA,YAAY,EAAGC,KAAD,IAAe;AACzB,QAAIA,KAAK,IAAI,OAAT,IAAoBA,KAAK,IAAG,QAAhC,EAA2C;AACvC,UAAIC,OAAO,GAAID,KAAK,IAAI,OAAT,GAAmB,IAAnB,GAA0B,KAAzC;AACDF,MAAAA,QAAQ,CAACJ,KAAK,CAACO,OAAD,CAAN,CAAR;AACF,KAHD,MAIK,IAAID,KAAK,IAAI,MAAb,EAAoB;AACrBF,MAAAA,QAAQ,CAACH,IAAI,EAAL,CAAR;AACH,KAFI,MAGA,IAAIK,KAAK,IAAI,QAAT,IAAqBA,KAAK,IAAI,eAAlC,EAAmD;AACpD,UAAIE,YAA+B,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAtC;AACA,UAAIC,aAAa,GAAGH,YAAY,CAAEI,QAAd,CAAuB,CAAvB,EAA0BA,QAA1B,CAAmC,CAAnC,CAApB;AACA,UAAIC,cAAc,GAAGL,YAAY,CAAEI,QAAd,CAAuB,CAAvB,EAA0BA,QAA1B,CAAmC,CAAnC,CAArB;AAEH;AACJ;AAfyC,CAAnB,CAA3B;;AAiBA,eAAed,OAAO,CAACI,eAAD,EAAkBC,kBAAlB,CAAP,CAA8CJ,MAA9C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Button from \"../../componants/buttons\";\nimport { begin, heal, attack } from '../../action';\nimport { moving } from '../../utils'\n\nconst mapStateToProps=() => ({})\nconst mapStateToDispatch = (dispatch:any) => ({\n    buttonAction: (value:any) => {\n        if (value == 'begin' || value== 'giveUp' ) {\n            let display =  value == 'begin' ? true : false\n           dispatch(begin(display))\n        }\n        else if (value == 'heal'){\n            dispatch(heal())\n        }\n        else if (value == 'attack' || value == 'specialAttack') {\n            let DivFlexLives:HTMLElement | null = document.querySelector('.flexLives')\n            let playerPicture = DivFlexLives!.children[0].children[0]\n            let monsterPicture = DivFlexLives!.children[1].children[0]\n          \n        }   \n    }})\n\nexport default connect(mapStateToProps, mapStateToDispatch) (Button)"]},"metadata":{},"sourceType":"module"}