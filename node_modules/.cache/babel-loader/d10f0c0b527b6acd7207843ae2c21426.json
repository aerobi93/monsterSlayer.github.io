{"ast":null,"code":"var _jsxFileName = \"/home/romu/Desktop/work/monster_slayer3 (copy)/src/components/button/index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    buttonName,\n    buttonClass,\n    displayAnimation,\n    monsterPv,\n    playerPv,\n    regainMana,\n    begin,\n    end,\n    attack,\n    fireBall,\n    fireCone,\n    ice,\n    heal,\n    monsterCounter\n  } = _ref;\n\n  const handlerClick = evt => {\n    if (!displayAnimation && monsterPv > 0 && playerPv > 0) {\n      setTimeout(() => {\n        regainMana();\n      }, 1000 * 1.5);\n    }\n\n    if (evt.target.name !== 'begin' && evt.target.name !== 'giveUp') {\n      setTimeout(() => {\n        monsterCounter();\n      }, 1000);\n    }\n\n    if (evt.target.name == 'begin') {\n      begin();\n    } else if (evt.target.name == 'giveUp') {\n      end();\n    } else if (evt.target.name == 'heal') {\n      heal();\n    } else if (evt.target.name == 'attack') {\n      attack();\n    } else if (evt.target.name == 'fireBall') {\n      fireBall();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${buttonClass}-button ${buttonClass}-button--${buttonName} `,\n    name: buttonName,\n    onClick: evt => handlerClick(evt),\n    children: buttonName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/romu/Desktop/work/monster_slayer3 (copy)/src/components/button/index.tsx"],"names":["React","Button","buttonName","buttonClass","displayAnimation","monsterPv","playerPv","regainMana","begin","end","attack","fireBall","fireCone","ice","heal","monsterCounter","handlerClick","evt","setTimeout","target","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAkBA,MAAMC,MAAM,GAAG,QAeD;AAAA,MAfE;AACdC,IAAAA,UADc;AAEdC,IAAAA,WAFc;AAGdC,IAAAA,gBAHc;AAIdC,IAAAA,SAJc;AAKdC,IAAAA,QALc;AAMdC,IAAAA,UANc;AAOdC,IAAAA,KAPc;AAQdC,IAAAA,GARc;AASdC,IAAAA,MATc;AAUdC,IAAAA,QAVc;AAWdC,IAAAA,QAXc;AAYdC,IAAAA,GAZc;AAadC,IAAAA,IAbc;AAcdC,IAAAA;AAdc,GAeF;;AACZ,QAAMC,YAAY,GAAIC,GAAD,IAAc;AACjC,QAAI,CAACb,gBAAD,IAAqBC,SAAS,GAAG,CAAjC,IAAsCC,QAAQ,GAAG,CAArD,EAAwD;AACtDY,MAAAA,UAAU,CAAC,MAAM;AACfX,QAAAA,UAAU;AACZ,OAFU,EAET,OAAO,GAFE,CAAV;AAGD;;AAED,QAAIU,GAAG,CAACE,MAAJ,CAAWC,IAAX,KAAoB,OAApB,IAA+BH,GAAG,CAACE,MAAJ,CAAWC,IAAX,KAAoB,QAAvD,EAAiE;AAC/DF,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,cAAc;AACf,OAFS,EAER,IAFQ,CAAV;AAGD;;AACD,QAAIE,GAAG,CAACE,MAAJ,CAAWC,IAAX,IAAmB,OAAvB,EAAgC;AAC9BZ,MAAAA,KAAK;AACN,KAFD,MAGK,IAAIS,GAAG,CAACE,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AACpCX,MAAAA,GAAG;AACJ,KAFI,MAGA,IAAIQ,GAAG,CAACE,MAAJ,CAAWC,IAAX,IAAmB,MAAvB,EAA+B;AAClCN,MAAAA,IAAI;AACL,KAFI,MAGA,IAAIG,GAAG,CAACE,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AACpCV,MAAAA,MAAM;AACP,KAFI,MAGA,IAAIO,GAAG,CAACE,MAAJ,CAAWC,IAAX,IAAmB,UAAvB,EAAmC;AACtCT,MAAAA,QAAQ;AACT;AAEF,GA5BD;;AA6BA,sBACE;AACE,IAAA,SAAS,EAAG,GAAER,WAAY,WAAUA,WAAY,YAAWD,UAAW,GADxE;AAEE,IAAA,IAAI,EAAEA,UAFR;AAGE,IAAA,OAAO,EAAGe,GAAD,IAASD,YAAY,CAACC,GAAD,CAHhC;AAAA,cAKKf;AALL;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtDD;;KAAMD,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\n\ninterface button {\n  buttonName: string,\n  buttonClass: string, \n  displayAnimation?: boolean,\n  monsterPv:number,\n  playerPv: number,\n  regainMana : any\n  begin?: any, \n  end? : any,\n  attack?: any,\n  fireBall?: any, \n  fireCone?: any,\n  ice?: any, \n  heal? : any,\n  monsterCounter?:any,\n}\nconst Button = ({\n  buttonName,\n  buttonClass, \n  displayAnimation,\n  monsterPv,\n  playerPv,\n  regainMana,\n  begin,\n  end,\n  attack,\n  fireBall,\n  fireCone,\n  ice,\n  heal,\n  monsterCounter,\n}: button) => {\n  const handlerClick = (evt: any) => {\n    if (!displayAnimation && monsterPv > 0 && playerPv > 0) {\n      setTimeout(() => {\n        regainMana()\n     },1000 * 1.5)\n    }\n\n    if (evt.target.name !== 'begin' && evt.target.name !== 'giveUp') {\n      setTimeout(() => {\n        monsterCounter()\n      },1000)\n    }\n    if (evt.target.name == 'begin') {\n      begin()\n    }\n    else if (evt.target.name == 'giveUp') {\n      end()\n    }\n    else if (evt.target.name == 'heal') {\n      heal()\n    }\n    else if (evt.target.name == 'attack') {\n      attack()\n    }\n    else if (evt.target.name == 'fireBall') {\n      fireBall()\n    }\n\n  }  \n  return (\n    <button \n      className={`${buttonClass}-button ${buttonClass}-button--${buttonName} `}\n      name={buttonName}\n      onClick={(evt) => handlerClick(evt)}\n      >\n        {buttonName}\n      </button>\n  )\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}