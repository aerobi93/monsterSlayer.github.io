{"ast":null,"code":"import { connect } from \"react-redux\";\nimport store from '../../store';\nimport Button from \"../../components/button\";\nimport { round } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal } from '../../action';\n\nconst mapStateToProps = state => ({\n  displayAnamimation: state.displayAnimation,\n  playerMana: state.playerMana,\n  monsterMana: state.monsterMana\n});\n\nconst mapDispatchToProps = displatch => ({\n  regainMana: () => {\n    displatch(regainMana());\n  },\n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \");\n\n    if (result) {\n      var _result$match;\n\n      let regex = /[a-zA-Z0-9]/g;\n      console.log(result, result.match(regex));\n\n      if (((_result$match = result.match(regex)) === null || _result$match === void 0 ? void 0 : _result$match.length) === result.length) {\n        displatch(setGamerName(result.trim()));\n        displatch(begin());\n      } else if (result.match(regex).length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux');\n      }\n    } else alert('une erreur est survenue');\n  },\n  end: () => {\n    displatch(end());\n  },\n  attack: (value, attacker, dommage) => {\n    let dommageInflige;\n    let manaConsume;\n    value == 'attack' ? dommageInflige = round(3, 10) : dommageInflige = round(10, 15);\n    value == 'attack' ? manaConsume = 0 : manaConsume = 20;\n    displatch(attack('player', dommageInflige, manaConsume));\n    if (store.getState().monsterPv > 0) setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0));\n    }, 1000 * 1.5);\n  },\n  heal: () => {\n    displatch(heal());\n    setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0));\n    }, 1000 * 1.5);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/container/button/index.tsx"],"names":["connect","store","Button","round","regainMana","begin","end","setGamerName","attack","heal","mapStateToProps","state","displayAnamimation","displayAnimation","playerMana","monsterMana","mapDispatchToProps","displatch","result","prompt","regex","console","log","match","length","trim","alert","value","attacker","dommage","dommageInflige","manaConsume","getState","monsterPv","setTimeout"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport store from '../../store'\nimport Button from \"../../components/button\";\nimport { round } from \"../../utils\";\nimport { regainMana, begin, end, setGamerName, attack, heal } from '../../action'\n\nconst mapStateToProps = (state : any) => ({\n  displayAnamimation : state.displayAnimation,\n  playerMana: state.playerMana,\n  monsterMana : state.monsterMana,\n})\nconst mapDispatchToProps = (displatch: any) => ({ \n  regainMana : () => {\n    displatch(regainMana())\n  },\n  begin: () => {\n    const result = prompt(\"choisisez un pseudo \")\n    if (result) {\n      let regex = /[a-zA-Z0-9]/g \n      console.log(result, result.match(regex))\n      if (result.match(regex)?.length === result.length){\n        displatch(setGamerName(result.trim()))\n        displatch(begin())\n      }\n      else if (result.match(regex)!.length < result.length) {\n        alert('le speudo ne peut pas contenir de caractére spéciaux')\n      }\n    }\n    else alert('une erreur est survenue')\n  },\n  end: () => {\n      displatch(end())\n  },\n  attack: (value: string, attacker:string, dommage:number) => {\n    let dommageInflige: number\n    let manaConsume:number\n    value== 'attack' ? dommageInflige = round(3, 10) : dommageInflige =  round(10, 15)\n    value== 'attack' ? manaConsume = 0 : manaConsume = 20\n    displatch(attack('player', dommageInflige, manaConsume))\n    if (store.getState().monsterPv > 0)\n    setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0))\n    }, 1000 * 1.5)\n\n  },\n  heal: () => {\n    displatch(heal())\n    setTimeout(() => {\n      displatch(attack('monster', round(3, 10), 0))\n    }, 1000 * 1.5)\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Button)"]},"metadata":{},"sourceType":"module"}