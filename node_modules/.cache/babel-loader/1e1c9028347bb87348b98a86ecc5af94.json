{"ast":null,"code":"var _jsxFileName = \"/home/rom/Desktop/reactBulder/monster_slayer3_react/src/components/button/index.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    buttonName,\n    buttonClass,\n    displayAnimation,\n    regainMana,\n    begin,\n    end,\n    attack,\n    heal\n  } = _ref;\n\n  const handlerClick = evt => {\n    if (evt.target.name !== 'begin') {\n      setTimeout(() => {\n        regainMana();\n      }, 1000 * 1.5);\n    }\n\n    if (evt.target.name == 'begin') {\n      begin();\n    } else if (evt.target.name == 'giveUp') {\n      end();\n    }\n\n    if (!displayAnimation) {\n      if (evt.target.name == 'attack' || evt.target.name == 'magicFire') {\n        attack(evt.target.name);\n      } else if (evt.target.name == 'heal') {\n        heal();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${buttonClass}-button ${buttonClass}-button--${buttonName} `,\n    name: buttonName,\n    onClick: evt => handlerClick(evt),\n    children: buttonName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/components/button/index.tsx"],"names":["Button","buttonName","buttonClass","displayAnimation","regainMana","begin","end","attack","heal","handlerClick","evt","target","name","setTimeout"],"mappings":";;;AAWA,MAAMA,MAAM,GAAG,QASD;AAAA,MATE;AACdC,IAAAA,UADc;AAEdC,IAAAA,WAFc;AAGdC,IAAAA,gBAHc;AAIdC,IAAAA,UAJc;AAKdC,IAAAA,KALc;AAMdC,IAAAA,GANc;AAOdC,IAAAA,MAPc;AAQdC,IAAAA;AARc,GASF;;AACZ,QAAMC,YAAY,GAAIC,GAAD,IAAc;AACjC,QAAIA,GAAG,CAACC,MAAJ,CAAWC,IAAX,KAAoB,OAAxB,EAAiC;AAC/BC,MAAAA,UAAU,CAAC,MAAM;AAChBT,QAAAA,UAAU;AACZ,OAFW,EAEV,OAAO,GAFG,CAAV;AAGD;;AAGD,QAAIM,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,OAAvB,EAAgC;AAC9BP,MAAAA,KAAK;AACN,KAFD,MAGK,IAAIK,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,QAAvB,EAAiC;AACpCN,MAAAA,GAAG;AACJ;;AACD,QAAI,CAACH,gBAAL,EAAuB;AACrB,UAAIO,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,QAAnB,IAAgCF,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,WAAvD,EAAqE;AACrEL,QAAAA,MAAM,CAACG,GAAG,CAACC,MAAJ,CAAWC,IAAZ,CAAN;AACC,OAFD,MAGK,IAAIF,GAAG,CAACC,MAAJ,CAAWC,IAAX,IAAmB,MAAvB,EAA+B;AACpCJ,QAAAA,IAAI;AACH;AACF;AAEF,GAvBD;;AAwBA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEN,WAAY,WAAUA,WAAY,YAAWD,UAAW,GADxE;AAEE,IAAA,IAAI,EAAEA,UAFR;AAGE,IAAA,OAAO,EAAGS,GAAD,IAASD,YAAY,CAACC,GAAD,CAHhC;AAAA,cAKKT;AALL;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3CD;;KAAMD,M;AA6CN,eAAeA,MAAf","sourcesContent":["import react from 'react'\ninterface button {\n  buttonName: string,\n  buttonClass: string, \n  displayAnimation?: boolean,\n  regainMana : any\n  begin?: any, \n  end? : any,\n  attack?: any\n  heal? : any\n}\nconst Button = ({\n  buttonName,\n  buttonClass, \n  displayAnimation,\n  regainMana,\n  begin,\n  end,\n  attack,\n  heal\n}: button) => {\n  const handlerClick = (evt: any) => {\n    if (evt.target.name !== 'begin') {\n      setTimeout(() => {\n       regainMana()\n    },1000 * 1.5)\n    }\n\n   \n    if (evt.target.name == 'begin') {\n      begin()\n    }\n    else if (evt.target.name == 'giveUp') {\n      end()\n    }\n    if (!displayAnimation) {\n      if (evt.target.name == 'attack' || (evt.target.name == 'magicFire')) {\n      attack(evt.target.name)\n      }\n      else if (evt.target.name == 'heal') {\n      heal()\n      }\n    }\n    \n  }  \n  return (\n    <button \n      className={`${buttonClass}-button ${buttonClass}-button--${buttonName} `}\n      name={buttonName}\n      onClick={(evt) => handlerClick(evt)}\n      >\n        {buttonName}\n      </button>\n  )\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}