{"ast":null,"code":"import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK } from '../action';\nimport { monsterArray } from '../utils';\nconst initialState = {\n  level: 0,\n  beeingPlaying: false,\n  displayAnimation: false,\n  monsterName: monsterArray[0],\n  monsterPvMax: 100,\n  monsterPv: 100,\n  monsterManaMax: 100,\n  monsterMana: 100,\n  lvUpMonster: 100,\n  messageMonster: '',\n  gamerName: '',\n  playerPvMax: 100,\n  playerPv: 100,\n  playerManaMax: 100,\n  playerMana: 100,\n  lvUpPlayer: 100,\n  messagePlayer: ''\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_GAMER_NAME:\n      return { ...state,\n        gamerName: action.value\n      };\n\n    case BEGIN:\n      return { ...state,\n        beeingPlaying: true\n      };\n\n    case HEAL:\n      return { ...state,\n        playerPv: state.playerPv + Math.floor(10 * state.lvUpPlayer / 100) >= state.playerPvMax ? state.playerPvMax : state.playerPv + Math.floor(10 * state.lvUpPlayer / 100),\n        messagePlayer: state.playerPv + Math.floor(10 * state.lvUpPlayer / 100) >= state.playerPvMax ? state.playerPvMax - state.playerPv : Math.floor(10 * state.lvUpPlayer / 100)\n      };\n\n    case ATTACK:\n      {\n        if (action.attacker == 'player') {\n          return { ...state,\n            monsterPv: state.monsterPv - action.dommageInflige * state.lvUpMonster / 100 <= 0 ? 0 : state.monsterPv - action.dommageInflige * state.lvUpMonster / 100,\n            messageMonster: state.gamerName + ' vous a infliger ' + action.dommageInflige * state.lvUpMonster / 100 + ' de dommage'\n          };\n        }\n\n        if (action.attacker == 'monster') {\n          return { ...state,\n            playerPv: state.playerPv - action.dommageInflige * state.lvUpPlayer / 100 <= 0 ? 0 : state.playerPv - action.dommageInflige * state.lvUpPlayer / 100,\n            messagePlayer: state.monsterName + ' vous a infliger ' + action.dommageInflige * state.lvUpPlayer / 100 + ' de dommage'\n          };\n        }\n      }\n\n    case END:\n      return { ...state,\n        level: 0,\n        gamerName: '',\n        monsterName: monsterArray[0],\n        beeingPlaying: false,\n        displayAnimation: false,\n        monsterPvMax: 100,\n        monsterPv: 100,\n        playerPvMax: 100,\n        playerPv: 100,\n        monsterManaMax: 100,\n        monsterMana: 100,\n        playerManaMax: 100,\n        playerMana: 100\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/reducers/index.tsx"],"names":["SET_GAMER_NAME","BEGIN","END","HEAL","ATTACK","monsterArray","initialState","level","beeingPlaying","displayAnimation","monsterName","monsterPvMax","monsterPv","monsterManaMax","monsterMana","lvUpMonster","messageMonster","gamerName","playerPvMax","playerPv","playerManaMax","playerMana","lvUpPlayer","messagePlayer","reducer","state","action","type","value","Math","floor","attacker","dommageInflige"],"mappings":"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","sourcesContent":["import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK } from '../action'\nimport { monsterArray } from '../utils'\n\nconst initialState = {\n  level : 0,\n  beeingPlaying : false,\n  displayAnimation:false,\n  monsterName: monsterArray[0],\n  monsterPvMax: 100,\n  monsterPv: 100,\n  monsterManaMax: 100,\n  monsterMana: 100,\n  lvUpMonster : 100,\n  messageMonster: '',\n  gamerName:'',\n  playerPvMax: 100,\n  playerPv: 100,\n  playerManaMax: 100,\n  playerMana: 100,\n  lvUpPlayer: 100,\n  messagePlayer: '', \n};\n\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case SET_GAMER_NAME:\n      return {\n        ...state,\n        gamerName : action.value\n      }\n    case BEGIN: \n     return {\n       ...state, \n       beeingPlaying: true\n     }\n     case HEAL: \n      return {\n        ...state,\n        playerPv: state.playerPv + Math.floor(10 * ( state.lvUpPlayer) /100) >= state.playerPvMax ? \n          state.playerPvMax: \n          state.playerPv + Math.floor(10 * ( state.lvUpPlayer) /100),\n        messagePlayer: state.playerPv + Math.floor(10 * ( state.lvUpPlayer) /100) >= state.playerPvMax ? \n          state.playerPvMax  - state.playerPv : \n          Math.floor(10 * ( state.lvUpPlayer) /100)\n      }\n      case ATTACK: {\n        if( action.attacker == 'player') {\n          return {\n            ...state,\n            monsterPv: state.monsterPv - (action.dommageInflige * (state.lvUpMonster ) / 100) <= 0 ?\n              0 :\n              state.monsterPv - (action.dommageInflige * (state.lvUpMonster ) / 100),\n            messageMonster: state.gamerName + ' vous a infliger ' + (action.dommageInflige * (state.lvUpMonster ) / 100) + ' de dommage'\n          }\n        }\n        if( action.attacker == 'monster') {\n          return {\n            ...state,\n            playerPv: state.playerPv - (action.dommageInflige * (state.lvUpPlayer) / 100) <= 0 ?\n              0 :\n              state.playerPv - (action.dommageInflige * (state.lvUpPlayer) / 100),\n            messagePlayer: state.monsterName + ' vous a infliger ' + (action.dommageInflige * (state.lvUpPlayer) / 100) + ' de dommage'\n          }\n        }\n      }\n     case END :\n       return {\n         ...state,\n         level : 0,\n         gamerName:'',\n         monsterName: monsterArray[0],\n         beeingPlaying : false,\n         displayAnimation:false,\n         monsterPvMax: 100,\n         monsterPv: 100, \n         playerPvMax: 100,\n         playerPv: 100,\n         monsterManaMax: 100,\n         monsterMana: 100, \n         playerManaMax: 100,\n         playerMana: 100, \n       }\n    default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}