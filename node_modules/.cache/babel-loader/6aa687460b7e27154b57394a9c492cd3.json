{"ast":null,"code":"import { BEGIN, LEVEL_UP, END, HEAL, ATTACK, CHANGE_DISPLAY_ANIMATION } from '../action';\nconst initialState = {\n  level: 0,\n  monsterPv: 100,\n  monsterPvMax: 100,\n  playerPv: 100,\n  playerPvMax: 100,\n  playerName: 'rom',\n  DommageBYlevelplayer: 100,\n  DommageBYlevelMonster: 100,\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: false,\n  displayAnimation: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case BEGIN:\n      return { ...state,\n        gameBegining: true,\n        playerPv: state.monsterPvMax,\n        monsterPv: state.monsterPvMax,\n        messageDommageMonster: '',\n        messageDommagePlayer: ''\n      };\n\n    case LEVEL_UP:\n      return { ...state,\n        level: state.level + 1,\n        monsterPvMax: Math.floor(state.monsterPvMax + state.monsterPvMax * 15 / 100),\n        playerPvMax: Math.floor(state.playerPvMax + state.playerPvMax * 20 / 100),\n        DommageBYlevelplayer: Math.floor(state.DommageBYlevelplayer + 10),\n        DommageBYlevelMonster: Math.floor(state.DommageBYlevelMonster + 15)\n      };\n\n    case END:\n      return { ...state,\n        gameBegining: false,\n        playerPv: 100,\n        monsterPv: 100,\n        monsterPvMax: 100,\n        playerPvMax: 100,\n        messageDommageMonster: '',\n        messageDommagePlayer: '',\n        level: 0\n      };\n\n    case HEAL:\n      return { ...state,\n        messageDommagePlayer: 'vous avez recupere ' + Math.floor(state.playerPv + 10 * state.DommageBYlevelplayer / 100 >= 100 ? 100 - state.playerPv : Math.floor(10 * state.DommageBYlevelplayer / 100)) + ' pv',\n        playerPv: state.playerPv + Math.floor(10 * state.DommageBYlevelplayer / 100) >= 100 ? 100 : state.playerPv + Math.floor(10 * state.DommageBYlevelplayer / 100)\n      };\n\n    case ATTACK:\n      {\n        if (action.player == 'playerPv') {\n          return { ...state,\n            playerPv: +state.playerPv - Math.floor(action.value * state.DommageBYlevelplayer / 100) < 0 ? 0 : +state.playerPv - Math.floor(action.value * state.DommageBYlevelplayer / 100),\n            messageDommagePlayer: 'vous avez recu ' + Math.floor(action.value * state.DommageBYlevelplayer / 100) + ' de dommage'\n          };\n        }\n\n        if (action.player == 'monsterPv') {\n          return { ...state,\n            monsterPv: +state.monsterPv - Math.floor(action.value * state.DommageBYlevelMonster / 100) < 0 ? 0 : +state.monsterPv - Math.floor(action.value * state.DommageBYlevelMonster / 100),\n            messageDommageMonster: 'vous avez recu ' + Math.floor(action.value * state.DommageBYlevelMonster / 100) + ' de dommage'\n          };\n        }\n      }\n\n    case CHANGE_DISPLAY_ANIMATION:\n      return { ...state,\n        displayAnimation: !state.displayAnimation\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/reducers/index.tsx"],"names":["BEGIN","LEVEL_UP","END","HEAL","ATTACK","CHANGE_DISPLAY_ANIMATION","initialState","level","monsterPv","monsterPvMax","playerPv","playerPvMax","playerName","DommageBYlevelplayer","DommageBYlevelMonster","messageDommageMonster","messageDommagePlayer","gameBegining","displayAnimation","reducer","state","action","type","Math","floor","player","value"],"mappings":"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","sourcesContent":["import {  BEGIN, LEVEL_UP, END,  HEAL, ATTACK, CHANGE_DISPLAY_ANIMATION} from '../action'\n\nconst initialState = {\nlevel : 0,\nmonsterPv : 100,\nmonsterPvMax : 100,\nplayerPv : 100,\nplayerPvMax : 100,\nplayerName: 'rom',\nDommageBYlevelplayer : 100, \nDommageBYlevelMonster : 100, \nmessageDommageMonster: '',\nmessageDommagePlayer: '',\ngameBegining:false,\ndisplayAnimation :false,\n};\n\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case BEGIN:\n      return {\n        ...state,\n        gameBegining: true,\n        playerPv :   state.monsterPvMax ,\n        monsterPv : state.monsterPvMax,\n        messageDommageMonster: '',\n        messageDommagePlayer: '',\n      }\n    case LEVEL_UP :\n      return {\n        ...state,\n        level: state.level + 1,\n        monsterPvMax : Math.floor(state.monsterPvMax + ((state.monsterPvMax *15)/100)),\n        playerPvMax : Math.floor(state.playerPvMax + ((state.playerPvMax * 20)/100)),\n        DommageBYlevelplayer : Math.floor(state.DommageBYlevelplayer + 10),\n        DommageBYlevelMonster : Math.floor(state.DommageBYlevelMonster + 15),\n      }\n    case END:\n      return {\n        ...state,\n        gameBegining: false,\n        playerPv : 100,\n        monsterPv :100 ,\n        monsterPvMax :100,\n        playerPvMax : 100,\n        messageDommageMonster: '',\n        messageDommagePlayer: '',\n        level: 0,\n      }\n    case HEAL:\n      return {\n        ...state,\n        messageDommagePlayer: 'vous avez recupere ' + Math.floor(state.playerPv + ((10 * state.DommageBYlevelplayer)/100) >= 100 ? 100 - state.playerPv  : Math.floor((10 * state.DommageBYlevelplayer)/100))  + ' pv',\n        playerPv : state.playerPv +  Math.floor((10 * state.DommageBYlevelplayer)/100)  >= 100 ? 100 : state.playerPv +  Math.floor((10 * state.DommageBYlevelplayer)/100) ,\n      }\n    case ATTACK: {\n      if (action.player== 'playerPv') {\n        return {\n        ...state,\n        playerPv: +state.playerPv - Math.floor((action.value * state.DommageBYlevelplayer ) / 100) < 0 ? 0 : +state.playerPv - Math.floor((action.value * state.DommageBYlevelplayer ) / 100),\n        messageDommagePlayer: 'vous avez recu ' + Math.floor((action.value * state.DommageBYlevelplayer ) / 100)  + ' de dommage'\n        }\n      }\n      if (action.player== 'monsterPv') {\n        return {\n        ...state,\n        monsterPv: +state.monsterPv - Math.floor((action.value * state.DommageBYlevelMonster )/ 100) < 0 ? 0 : +state.monsterPv - Math.floor((action.value * state.DommageBYlevelMonster )/ 100),\n        messageDommageMonster: 'vous avez recu ' + Math.floor((action.value * state.DommageBYlevelMonster ) / 100)  + ' de dommage'\n        }\n      }\n    }\n    case CHANGE_DISPLAY_ANIMATION: \n      return {\n        ...state, \n        displayAnimation: !state.displayAnimation\n      }\n      default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}