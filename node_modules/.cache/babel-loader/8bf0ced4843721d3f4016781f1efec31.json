{"ast":null,"code":"import _defineProperty from\"/home/romu/Desktop/work/monster_slayer3 (copy)/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/romu/Desktop/work/monster_slayer3 (copy)/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{SET_GAMER_NAME,BEGIN,END,HEAL,ATTACK,CHANGE_LEVEL,REGAIN_MANA,CHANGE_DISPLAY_ANIMATION,REPORT_BATTLE,FIRE_BALL,LOST_MANA,FIRE_CONE}from'../action';import{monsterArray,round}from'../utils';var initialState={level:0,beeingPlaying:false,displayAnimation:false,dommage:'',//monster\ncurrentMonster:monsterArray[0],monsterName:'',monsterPv:'',monsterMana:'',messageMonster:'',//player\ngamerName:'',playerPvMax:100,playerPv:'',playerManaMax:100,playerMana:'',lvUpPlayer:100,messagePlayer:''};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case SET_GAMER_NAME:return _objectSpread(_objectSpread({},state),{},{gamerName:action.value});case BEGIN:return _objectSpread(_objectSpread({},state),{},{beeingPlaying:true,displayAnimation:false,playerPv:state.playerPvMax,playerMana:state.playerManaMax,monsterName:state.currentMonster.name,monsterPv:state.currentMonster.pvMax,monsterMana:state.currentMonster.manaMax});case CHANGE_DISPLAY_ANIMATION:return _objectSpread(_objectSpread({},state),{},{displayAnimation:!state.displayAnimation});case REGAIN_MANA:{return _objectSpread(_objectSpread({},state),{},{monsterMana:state.monsterMana+5<state.currentMonster.manaMax?state.monsterMana+5:state.currentMonster.manaMax,playerMana:state.playerMana+5<state.playerManaMax?state.playerMana+5:state.playerManaMax});}case HEAL:{if(action.value=='player'){return _objectSpread(_objectSpread({},state),{},{playerMana:state.playerMana-10,playerPv:state.playerPv+Math.floor(15*state.lvUpPlayer/100)>=state.playerPvMax?state.playerPvMax:state.playerPv+Math.floor(15*state.lvUpPlayer/100),messagePlayer:state.playerPv+Math.floor(15*state.lvUpPlayer/100)>=state.playerPvMax?'vous avez recuperez '+(state.playerPvMax-state.playerPv)+'pv':'vous avez recuperez '+Math.floor(15*state.lvUpPlayer/100)+'pv'});}if(action.value=='monster'){return _objectSpread(_objectSpread({},state),{},{monsterMana:state.monsterMana-10,monsterPv:state.monsterPv+state.currentMonster.heal>=state.currentMonster.pvMax?state.currentMonster.pvMax:state.monsterPv+state.currentMonster.heal,messageMonster:state.monsterPv+state.currentMonster.heal>=state.currentMonster.pvMax?'le monstre a recuperer'+(state.currentMonster.pvMax-state.monsterPv)+'pv':'le monstre a recuperer'+state.currentMonster.heal+'pv'});}}case REPORT_BATTLE:return _objectSpread(_objectSpread({},state),{},_defineProperty({},action.forWho,action.forWho=='monster'?state.gamerName+' a infliger '+state.dommage+' de degat':state.monsterName+' vous a infliger '+state.dommage+' de degat'));case ATTACK:{if(action.attacker==\"player\"){var dommageInflige=Math.floor(round(3,5)*state.lvUpPlayer/100);return _objectSpread(_objectSpread({},state),{},{dommage:dommageInflige,monsterPv:state.monsterPv-dommageInflige>0?state.monsterPv-dommageInflige:0});}if(action.attacker==\"monster\"){var _dommageInflige=round(state.currentMonster.dommage_min,state.currentMonster.dommage_max);return _objectSpread(_objectSpread({},state),{},{dommage:_dommageInflige,playerPv:state.playerPv-_dommageInflige>0?state.playerPv-_dommageInflige:0});}}case LOST_MANA:return _objectSpread(_objectSpread({},state),{},_defineProperty({},action.value,+[state[action.value]]-action.number));case FIRE_CONE:{console.log('state');return _objectSpread(_objectSpread({},state),{},{degat:state.degat+state.lvUpPlayer/100,monsterPv:state.monsterPv-state.lvUpPlayer/100});}case FIRE_BALL:{if(action.attacker==\"player\"){var _dommageInflige2=Math.floor(round(10,15)*state.lvUpPlayer/100);return _objectSpread(_objectSpread({},state),{},{dommage:_dommageInflige2,monsterPv:state.monsterPv-_dommageInflige2>0?state.monsterPv-_dommageInflige2:0});}if(action.attacker==\"monster\"){var _dommageInflige3=round(state.currentMonster.special_min,state.currentMonster.special_max);return _objectSpread(_objectSpread({},state),{},{dommage:_dommageInflige3,playerPv:state.playerPv-_dommageInflige3>0?state.playerPv-_dommageInflige3:0});}}case CHANGE_LEVEL:return _objectSpread(_objectSpread({},state),{},{level:state.level+1,lvUpPlayer:state.lvUpPlayer+20,playerPvMax:state.playerPvMax+20,playerManaMax:state.playerPvMax+20,monsterPv:monsterArray[state.level+1].pvMax,monsterPvMax:monsterArray[state.level+1].pvMax,monsterMana:monsterArray[state.level+1].manaMax,monsterManaMax:monsterArray[state.level+1].manaMax,monsterName:monsterArray[state.level+1].name,messagePlayer:'',messageMonster:'',displayAnimation:false});case END:return _objectSpread(_objectSpread({},state),{},{level:0,gamerName:'',monsterName:monsterArray[0],beeingPlaying:false,displayAnimation:false,monsterPvMax:'',monsterPv:100,playerPvMax:100,playerPv:100,monsterManaMax:100,monsterMana:100,playerManaMax:100,playerMana:100});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/romu/Desktop/work/monster_slayer3 (copy)/src/reducers/index.tsx"],"names":["SET_GAMER_NAME","BEGIN","END","HEAL","ATTACK","CHANGE_LEVEL","REGAIN_MANA","CHANGE_DISPLAY_ANIMATION","REPORT_BATTLE","FIRE_BALL","LOST_MANA","FIRE_CONE","monsterArray","round","initialState","level","beeingPlaying","displayAnimation","dommage","currentMonster","monsterName","monsterPv","monsterMana","messageMonster","gamerName","playerPvMax","playerPv","playerManaMax","playerMana","lvUpPlayer","messagePlayer","reducer","state","action","type","value","name","pvMax","manaMax","Math","floor","heal","forWho","attacker","dommageInflige","dommage_min","dommage_max","number","console","log","degat","special_min","special_max","monsterPvMax","monsterManaMax"],"mappings":"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","sourcesContent":["import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK, CHANGE_LEVEL, REGAIN_MANA, CHANGE_DISPLAY_ANIMATION, REPORT_BATTLE, FIRE_BALL, LOST_MANA, FIRE_CONE } from '../action'\nimport { monsterArray, round } from '../utils'\n\nconst initialState = {\n  level : 0,\n  beeingPlaying : false,\n  displayAnimation:false,\n  dommage:'',\n  //monster\n  currentMonster : monsterArray[0],\n  monsterName:  '',\n  monsterPv: '',\n  monsterMana:'',\n  messageMonster: '',\n  //player\n  gamerName:'',\n  playerPvMax: 100,\n  playerPv: '',\n  playerManaMax: 100,\n  playerMana: '',\n  lvUpPlayer: 100,\n  messagePlayer: '', \n};\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case SET_GAMER_NAME:\n      return {\n        ...state,\n        gamerName : action.value\n      }\n    case BEGIN: \n     return {\n       ...state, \n       beeingPlaying: true,\n       displayAnimation:false,\n       playerPv: state.playerPvMax,\n       playerMana: state.playerManaMax,\n       monsterName: state.currentMonster.name,\n       monsterPv : state.currentMonster.pvMax,\n       monsterMana: state.currentMonster.manaMax,\n     }\n     case CHANGE_DISPLAY_ANIMATION: \n      return {\n        ...state,\n        displayAnimation : !state.displayAnimation\n      }\n     case REGAIN_MANA:{\n      return {\n        ...state,\n        monsterMana: state.monsterMana + 5 <  state.currentMonster.manaMax ? state.monsterMana + 5 : state.currentMonster.manaMax,\n        playerMana: state.playerMana + 5 < state.playerManaMax ?  state.playerMana + 5 : state.playerManaMax\n      }}\n    case HEAL: {\n       if (action.value == 'player') {\n       return {\n        ...state,\n          playerMana : state.playerMana - 10,\n          playerPv: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ?\n          state.playerPvMax: \n          state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100),\n          messagePlayer: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ? \n          'vous avez recuperez ' + (state.playerPvMax  - state.playerPv) + 'pv' : \n          'vous avez recuperez ' + Math.floor(15 * ( state.lvUpPlayer) /100) + 'pv'\n        }\n     }\n        if (action.value == 'monster'){\n          return {\n            ...state,\n            monsterMana : state.monsterMana - 10,\n            monsterPv: state.monsterPv + state.currentMonster.heal >= state.currentMonster.pvMax ?\n            state.currentMonster.pvMax: \n            state.monsterPv + state.currentMonster.heal,\n            messageMonster: state.monsterPv + state.currentMonster.heal >= state.currentMonster.pvMax ? \n            'le monstre a recuperer' + (state.currentMonster.pvMax  - state.monsterPv) + 'pv' : \n            'le monstre a recuperer' + state.currentMonster.heal + 'pv'\n          }\n        }\n      }\n      case  REPORT_BATTLE: \n        return {\n          ...state,\n          [action.forWho]: action.forWho == 'monster' ?\n            state.gamerName + ' a infliger ' + state.dommage + ' de degat' :\n            state.monsterName + ' vous a infliger ' + state.dommage + ' de degat'\n\n        }\n      case ATTACK: {\n        if (action.attacker == \"player\") {\n          let dommageInflige = Math.floor( round(3 , 5) * (state.lvUpPlayer) / 100)\n          return {\n            ...state,\n            dommage: dommageInflige,\n            monsterPv : state.monsterPv - dommageInflige > 0 ? \n            state.monsterPv - dommageInflige :\n            0\n          }\n        }\n        if (action.attacker == \"monster\") {\n          let dommageInflige = round(state.currentMonster.dommage_min, state.currentMonster.dommage_max)\n          return {\n            ...state,\n            dommage: dommageInflige,\n            playerPv : state.playerPv - dommageInflige > 0 ? \n            state.playerPv - dommageInflige :\n            0\n          }\n        }\n      }\n      case LOST_MANA: \n        return {\n          ...state,\n          [action.value] : +[state[action.value]] - action.number\n        }\n      case FIRE_CONE :{\n        console.log('state')\n        return {\n          ...state,\n          degat : state.degat + (state.lvUpPlayer / 100),\n          monsterPv: state.monsterPv - (  state.lvUpPlayer / 100)\n        }}\n      \n      case FIRE_BALL: {\n        if (action.attacker == \"player\") {\n          let dommageInflige = Math.floor( round(10 , 15) * (state.lvUpPlayer) / 100)\n          return {\n            ...state,\n            dommage: dommageInflige,\n            monsterPv : state.monsterPv - dommageInflige > 0 ? \n            state.monsterPv - dommageInflige :\n            0\n          }\n        }\n        if (action.attacker == \"monster\") {\n          let dommageInflige = round(state.currentMonster.special_min, state.currentMonster.special_max)\n          return {\n            ...state,\n            dommage: dommageInflige,\n            playerPv : state.playerPv - dommageInflige > 0 ? \n            state.playerPv - dommageInflige :\n            0\n          }\n        }\n      }\n\n      case CHANGE_LEVEL: \n        return {\n          ...state,\n          level: state.level + 1,\n          lvUpPlayer: state.lvUpPlayer + 20,\n          playerPvMax : state.playerPvMax + 20,\n          playerManaMax : state.playerPvMax + 20,\n          monsterPv: monsterArray[state.level + 1].pvMax,\n          monsterPvMax: monsterArray[state.level + 1].pvMax,\n          monsterMana : monsterArray[state.level + 1].manaMax,\n          monsterManaMax : monsterArray[state.level + 1].manaMax,\n          monsterName: monsterArray[state.level + 1].name,\n          messagePlayer: '',\n          messageMonster : '', \n          displayAnimation : false\n        }\n      case END :\n        return {\n          ...state,\n          level : 0,\n          gamerName:'',\n          monsterName: monsterArray[0],\n          beeingPlaying : false,\n          displayAnimation:false,\n          monsterPvMax: '',\n          monsterPv: 100, \n          playerPvMax: 100,\n          playerPv: 100,\n          monsterManaMax: 100,\n          monsterMana: 100, \n          playerManaMax: 100,\n          playerMana: 100, \n       }\n    default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}