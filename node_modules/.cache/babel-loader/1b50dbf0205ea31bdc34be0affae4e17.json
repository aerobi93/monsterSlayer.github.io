{"ast":null,"code":"import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK, CHANGE_LEVEL, REGAIN_MANA, CHANGE_DISPLAY_ANIMATION } from '../action';\nimport { monsterArray, round } from '../utils';\nconst initialState = {\n  level: 0,\n  beeingPlaying: false,\n  displayAnimation: false,\n  actualMonster: monsterArray[0],\n  monsterName: monsterArray[0].name,\n  monsterPvMax: monsterArray[0].pvMax,\n  monsterPv: '',\n  monsterManaMax: monsterArray[0].manaMax,\n  monsterMana: '',\n  messageMonster: '',\n  gamerName: '',\n  playerPvMax: 100,\n  playerPv: '',\n  playerManaMax: 100,\n  playerMana: '',\n  lvUpPlayer: 100,\n  messagePlayer: ''\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_GAMER_NAME:\n      return { ...state,\n        gamerName: action.value\n      };\n\n    case BEGIN:\n      return { ...state,\n        beeingPlaying: true,\n        displayAnimation: false,\n        playerPv: state.playerPvMax,\n        playerMana: state.playerManaMax,\n        monsterPv: state.monsterPvMax,\n        monsterMana: state.monsterManaMax,\n        monsterHeal: state.actualMonster.heal,\n        monsterSpecial: state.actualMonster.special\n      };\n\n    case CHANGE_DISPLAY_ANIMATION:\n      return { ...state,\n        displayAnimation: !state.displayAnimation\n      };\n\n    case REGAIN_MANA:\n      return { ...state,\n        monsterMana: state.monsterMana + 5 < state.monsterManaMax ? state.monsterMana + 5 : state.monsterManaMax,\n        playerMana: state.playerMana + 5 < state.playerManaMax ? state.playerMana + 5 : state.playerManaMax\n      };\n\n    case HEAL:\n      {\n        if (action.value == 'player') {\n          return { ...state,\n            playerMana: state.playerMana - 10,\n            playerPv: state.playerPv + Math.floor(15 * state.lvUpPlayer / 100) >= state.playerPvMax ? state.playerPvMax : state.playerPv + Math.floor(15 * state.lvUpPlayer / 100),\n            messagePlayer: state.playerPv + Math.floor(15 * state.lvUpPlayer / 100) >= state.playerPvMax ? 'vous avez recuperez' + (state.playerPvMax - state.playerPv) + 'pv' : 'vous avez recuperez' + Math.floor(15 * state.lvUpPlayer / 100) + 'pv'\n          };\n        }\n\n        if (action.value == 'monster') {\n          return { ...state,\n            monsterMana: state.monsterMana - 10,\n            monsterPv: state.monsterPv + state.monsterHeal >= state.monsterPvMax ? state.monsterPvMax : state.monsterPv + state.monsterHeal,\n            messageMonster: state.monsterPv + state.monsterHeal >= state.monsterPvMax ? 'le monstre  a recuperer' + (state.monsterPvMax - state.monsterPv) + 'pv' : 'le monstre  a recuperer' + state.monsterHeal + 'pv'\n          };\n        }\n      }\n\n    case ATTACK:\n      {\n        if (action.attacker == 'player') {\n          return { ...state,\n            playerMana: action.typeAttack == 'special' ? state.playerMana - 20 : state.playerMana,\n            monsterPv: state.monsterPv - (action.typeAttack == 'normal' ? round(3, 10) : round(10, 15)) * state.lvUpPlayer / 100 <= 0 ? 0 : state.monsterPv - (action.typeAttack == 'normal' ? round(3, 10) : round(10, 15)) * state.lvUpPlayer / 100,\n            messageMonster: state.gamerName + ' vous a infliger ' + (action.typeAttack == 'normal' ? round(3, 10) : round(10, 15)) * state.lvUpPlayer / 100 + ' de dommage'\n          };\n        }\n\n        if (action.attacker == 'monster') {\n          return { ...state,\n            monsterMana: action.typeAttack == 'special' ? state.monsterMana - 20 : state.monsterMana,\n            playerPv: state.playerPv - (action.typeAttack == 'normal' ? state.actualMonster.dommage : state.actualMonster.special) <= 0 ? 0 : state.playerPv - (action.typeAttack == 'normal' ? state.actualMonster.dommage : state.actualMonster.special),\n            messagePlayer: state.monsterName + ' vous a infliger ' + s(action.typeAttack == 'normal' ? state.actualMonster.dommage : state.actualMonster.special) + ' de dommage'\n          };\n        }\n      }\n\n    case CHANGE_LEVEL:\n      return { ...state,\n        level: state.level + 1,\n        lvUpPlayer: state.lvUpPlayer + 20,\n        playerPvMax: state.playerPvMax + 20,\n        playerManaMax: state.playerPvMax + 20,\n        monsterPv: monsterArray[state.level + 1].pvMax,\n        monsterPvMax: monsterArray[state.level + 1].pvMax,\n        monsterMana: monsterArray[state.level + 1].manaMax,\n        monsterManaMax: monsterArray[state.level + 1].manaMax,\n        monsterName: monsterArray[state.level + 1].name,\n        monsterHeal: monsterArray[state.level + 1].heal,\n        monsterSpecial: monsterArray[state.level + 1].special,\n        messagePlayer: '',\n        messageMonster: '',\n        displayAnimation: false\n      };\n\n    case END:\n      return { ...state,\n        level: 0,\n        gamerName: '',\n        monsterName: monsterArray[0],\n        beeingPlaying: false,\n        displayAnimation: false,\n        monsterPvMax: 100,\n        monsterPv: 100,\n        playerPvMax: 100,\n        playerPv: 100,\n        monsterManaMax: 100,\n        monsterMana: 100,\n        playerManaMax: 100,\n        playerMana: 100\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/reducers/index.tsx"],"names":["SET_GAMER_NAME","BEGIN","END","HEAL","ATTACK","CHANGE_LEVEL","REGAIN_MANA","CHANGE_DISPLAY_ANIMATION","monsterArray","round","initialState","level","beeingPlaying","displayAnimation","actualMonster","monsterName","name","monsterPvMax","pvMax","monsterPv","monsterManaMax","manaMax","monsterMana","messageMonster","gamerName","playerPvMax","playerPv","playerManaMax","playerMana","lvUpPlayer","messagePlayer","reducer","state","action","type","value","monsterHeal","heal","monsterSpecial","special","Math","floor","attacker","typeAttack","dommage","s"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,YAAnD,EAAiEC,WAAjE,EAA8EC,wBAA9E,QAA8G,WAA9G;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,UAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CADW;AAEnBC,EAAAA,aAAa,EAAG,KAFG;AAGnBC,EAAAA,gBAAgB,EAAC,KAHE;AAInBC,EAAAA,aAAa,EAAGN,YAAY,CAAC,CAAD,CAJT;AAKnBO,EAAAA,WAAW,EAAGP,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,IALX;AAMnBC,EAAAA,YAAY,EAAET,YAAY,CAAC,CAAD,CAAZ,CAAgBU,KANX;AAOnBC,EAAAA,SAAS,EAAE,EAPQ;AAQnBC,EAAAA,cAAc,EAAGZ,YAAY,CAAC,CAAD,CAAZ,CAAgBa,OARd;AASnBC,EAAAA,WAAW,EAAC,EATO;AAUnBC,EAAAA,cAAc,EAAE,EAVG;AAWnBC,EAAAA,SAAS,EAAC,EAXS;AAYnBC,EAAAA,WAAW,EAAE,GAZM;AAanBC,EAAAA,QAAQ,EAAE,EAbS;AAcnBC,EAAAA,aAAa,EAAE,GAdI;AAenBC,EAAAA,UAAU,EAAE,EAfO;AAgBnBC,EAAAA,UAAU,EAAE,GAhBO;AAiBnBC,EAAAA,aAAa,EAAE;AAjBI,CAArB;;AAmBA,MAAMC,OAAO,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAnCtB,YAAmC;AAAA,MAArBuB,MAAqB,uEAAR,EAAQ;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKlC,cAAL;AACE,aAAO,EACL,GAAGgC,KADE;AAELR,QAAAA,SAAS,EAAGS,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKlC,KAAL;AACC,aAAO,EACL,GAAG+B,KADE;AAELpB,QAAAA,aAAa,EAAE,IAFV;AAGLC,QAAAA,gBAAgB,EAAC,KAHZ;AAILa,QAAAA,QAAQ,EAAEM,KAAK,CAACP,WAJX;AAKLG,QAAAA,UAAU,EAAEI,KAAK,CAACL,aALb;AAMLR,QAAAA,SAAS,EAAGa,KAAK,CAACf,YANb;AAOLK,QAAAA,WAAW,EAAEU,KAAK,CAACZ,cAPd;AAQLgB,QAAAA,WAAW,EAAGJ,KAAK,CAAClB,aAAN,CAAoBuB,IAR7B;AASLC,QAAAA,cAAc,EAAEN,KAAK,CAAClB,aAAN,CAAoByB;AAT/B,OAAP;;AAWA,SAAKhC,wBAAL;AACC,aAAO,EACL,GAAGyB,KADE;AAELnB,QAAAA,gBAAgB,EAAG,CAACmB,KAAK,CAACnB;AAFrB,OAAP;;AAID,SAAKP,WAAL;AACC,aAAO,EACL,GAAG0B,KADE;AAELV,QAAAA,WAAW,EAAEU,KAAK,CAACV,WAAN,GAAmB,CAAnB,GAAuBU,KAAK,CAACZ,cAA7B,GAA8CY,KAAK,CAACV,WAAN,GAAoB,CAAlE,GAAsEU,KAAK,CAACZ,cAFpF;AAGLQ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmB,CAAnB,GAAuBI,KAAK,CAACL,aAA7B,GAA8CK,KAAK,CAACJ,UAAN,GAAmB,CAAjE,GAAqEI,KAAK,CAACL;AAHlF,OAAP;;AAKD,SAAKxB,IAAL;AAAW;AACT,YAAI8B,MAAM,CAACE,KAAP,IAAgB,QAApB,EAA8B;AAC9B,iBAAO,EACN,GAAGH,KADG;AAEJJ,YAAAA,UAAU,EAAGI,KAAK,CAACJ,UAAN,GAAmB,EAF5B;AAGJF,YAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,GAAiBc,IAAI,CAACC,KAAL,CAAW,KAAOT,KAAK,CAACH,UAAb,GAA0B,GAArC,CAAjB,IAA8DG,KAAK,CAACP,WAApE,GACVO,KAAK,CAACP,WADI,GAEVO,KAAK,CAACN,QAAN,GAAiBc,IAAI,CAACC,KAAL,CAAW,KAAOT,KAAK,CAACH,UAAb,GAA0B,GAArC,CALb;AAMJC,YAAAA,aAAa,EAAEE,KAAK,CAACN,QAAN,GAAiBc,IAAI,CAACC,KAAL,CAAW,KAAOT,KAAK,CAACH,UAAb,GAA0B,GAArC,CAAjB,IAA8DG,KAAK,CAACP,WAApE,GACf,yBAAyBO,KAAK,CAACP,WAAN,GAAqBO,KAAK,CAACN,QAApD,IAAgE,IADjD,GAEf,wBAAwBc,IAAI,CAACC,KAAL,CAAW,KAAOT,KAAK,CAACH,UAAb,GAA0B,GAArC,CAAxB,GAAoE;AARhE,WAAP;AAUD;;AACD,YAAII,MAAM,CAACE,KAAP,IAAgB,SAApB,EAA+B;AAC9B,iBAAO,EACL,GAAGH,KADE;AAELV,YAAAA,WAAW,EAAGU,KAAK,CAACV,WAAN,GAAoB,EAF7B;AAGLH,YAAAA,SAAS,EAAEa,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACI,WAAxB,IAAuCJ,KAAK,CAACf,YAA7C,GACXe,KAAK,CAACf,YADK,GAEXe,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACI,WALnB;AAMLb,YAAAA,cAAc,EAAES,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACI,WAAxB,IAAuCJ,KAAK,CAACf,YAA7C,GAChB,6BAA6Be,KAAK,CAACf,YAAN,GAAsBe,KAAK,CAACb,SAAzD,IAAsE,IADtD,GAEhB,4BAA4Ba,KAAK,CAACI,WAAlC,GAAgD;AAR3C,WAAP;AAUD;AACA;;AAEC,SAAKhC,MAAL;AAAa;AACX,YAAI6B,MAAM,CAACS,QAAP,IAAmB,QAAvB,EAAiC;AAC/B,iBAAO,EACL,GAAGV,KADE;AAELJ,YAAAA,UAAU,EAAGK,MAAM,CAACU,UAAP,IAAqB,SAArB,GAAiCX,KAAK,CAACJ,UAAN,GAAmB,EAApD,GAAyDI,KAAK,CAACJ,UAFvE;AAGLT,YAAAA,SAAS,EAAEa,KAAK,CAACb,SAAN,GAAmB,CAAEc,MAAM,CAACU,UAAP,IAAqB,QAArB,GAAgClC,KAAK,CAAC,CAAD,EAAI,EAAJ,CAArC,GAA+CA,KAAK,CAAC,EAAD,EAAK,EAAL,CAAtD,IAAoEuB,KAAK,CAACH,UAA1E,GAAyF,GAA5G,IAAoH,CAApH,GACT,CADS,GAETG,KAAK,CAACb,SAAN,GAAmB,CAAEc,MAAM,CAACU,UAAP,IAAqB,QAArB,GAAgClC,KAAK,CAAC,CAAD,EAAI,EAAJ,CAArC,GAA+CA,KAAK,CAAC,EAAD,EAAK,EAAL,CAAtD,IAAoEuB,KAAK,CAACH,UAA1E,GAAyF,GALzG;AAMLN,YAAAA,cAAc,EAAES,KAAK,CAACR,SAAN,GAAkB,mBAAlB,GAAyC,CAAES,MAAM,CAACU,UAAP,IAAqB,QAArB,GAAgClC,KAAK,CAAC,CAAD,EAAI,EAAJ,CAArC,GAA+CA,KAAK,CAAC,EAAD,EAAK,EAAL,CAAtD,IAAoEuB,KAAK,CAACH,UAA1E,GAAyF,GAAlI,GAAyI;AANpJ,WAAP;AAQD;;AACD,YAAII,MAAM,CAACS,QAAP,IAAmB,SAAvB,EAAkC;AAChC,iBAAO,EACL,GAAGV,KADE;AAELV,YAAAA,WAAW,EAAGW,MAAM,CAACU,UAAP,IAAqB,SAArB,GAAiCX,KAAK,CAACV,WAAN,GAAoB,EAArD,GAA0DU,KAAK,CAACV,WAFzE;AAGLI,YAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,IAAkBO,MAAM,CAACU,UAAP,IAAoB,QAApB,GAA+BX,KAAK,CAAClB,aAAN,CAAoB8B,OAAnD,GAA6DZ,KAAK,CAAClB,aAAN,CAAoByB,OAAnG,KAA+G,CAA/G,GACR,CADQ,GAERP,KAAK,CAACN,QAAN,IAAkBO,MAAM,CAACU,UAAP,IAAoB,QAApB,GAA+BX,KAAK,CAAClB,aAAN,CAAoB8B,OAAnD,GAA6DZ,KAAK,CAAClB,aAAN,CAAoByB,OAAnG,CALG;AAMLT,YAAAA,aAAa,EAAEE,KAAK,CAACjB,WAAN,GAAoB,mBAApB,GAA0C8B,CAAC,CAACZ,MAAM,CAACU,UAAP,IAAoB,QAApB,GAA+BX,KAAK,CAAClB,aAAN,CAAoB8B,OAAnD,GAA6DZ,KAAK,CAAClB,aAAN,CAAoByB,OAAlF,CAA3C,GAAwI;AANlJ,WAAP;AAQD;AACF;;AACD,SAAKlC,YAAL;AACE,aAAO,EACL,GAAG2B,KADE;AAELrB,QAAAA,KAAK,EAAEqB,KAAK,CAACrB,KAAN,GAAc,CAFhB;AAGLkB,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmB,EAH1B;AAILJ,QAAAA,WAAW,EAAGO,KAAK,CAACP,WAAN,GAAoB,EAJ7B;AAKLE,QAAAA,aAAa,EAAGK,KAAK,CAACP,WAAN,GAAoB,EAL/B;AAMLN,QAAAA,SAAS,EAAEX,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8BO,KANpC;AAOLD,QAAAA,YAAY,EAAET,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8BO,KAPvC;AAQLI,QAAAA,WAAW,EAAGd,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8BU,OARvC;AASLD,QAAAA,cAAc,EAAGZ,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8BU,OAT1C;AAULN,QAAAA,WAAW,EAAEP,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8BK,IAVtC;AAWLoB,QAAAA,WAAW,EAAG5B,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8B0B,IAXvC;AAYLC,QAAAA,cAAc,EAAE9B,YAAY,CAACwB,KAAK,CAACrB,KAAN,GAAc,CAAf,CAAZ,CAA8B4B,OAZzC;AAaLT,QAAAA,aAAa,EAAE,EAbV;AAcLP,QAAAA,cAAc,EAAG,EAdZ;AAeLV,QAAAA,gBAAgB,EAAG;AAfd,OAAP;;AAiBF,SAAKX,GAAL;AACE,aAAO,EACL,GAAG8B,KADE;AAELrB,QAAAA,KAAK,EAAG,CAFH;AAGLa,QAAAA,SAAS,EAAC,EAHL;AAILT,QAAAA,WAAW,EAAEP,YAAY,CAAC,CAAD,CAJpB;AAKLI,QAAAA,aAAa,EAAG,KALX;AAMLC,QAAAA,gBAAgB,EAAC,KANZ;AAOLI,QAAAA,YAAY,EAAE,GAPT;AAQLE,QAAAA,SAAS,EAAE,GARN;AASLM,QAAAA,WAAW,EAAE,GATR;AAULC,QAAAA,QAAQ,EAAE,GAVL;AAWLN,QAAAA,cAAc,EAAE,GAXX;AAYLE,QAAAA,WAAW,EAAE,GAZR;AAaLK,QAAAA,aAAa,EAAE,GAbV;AAcLC,QAAAA,UAAU,EAAE;AAdP,OAAP;;AAgBJ;AAAS,aAAOI,KAAP;AAjHX;AAmHD,CApHD;;AAqHA,eAAeD,OAAf","sourcesContent":["import { SET_GAMER_NAME, BEGIN, END, HEAL, ATTACK, CHANGE_LEVEL, REGAIN_MANA, CHANGE_DISPLAY_ANIMATION } from '../action'\nimport { monsterArray, round } from '../utils'\n\nconst initialState = {\n  level : 0,\n  beeingPlaying : false,\n  displayAnimation:false,\n  actualMonster : monsterArray[0],\n  monsterName:  monsterArray[0].name,\n  monsterPvMax: monsterArray[0].pvMax,\n  monsterPv: '',\n  monsterManaMax:  monsterArray[0].manaMax,\n  monsterMana:'',\n  messageMonster: '',\n  gamerName:'',\n  playerPvMax: 100,\n  playerPv: '',\n  playerManaMax: 100,\n  playerMana: '',\n  lvUpPlayer: 100,\n  messagePlayer: '', \n};\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case SET_GAMER_NAME:\n      return {\n        ...state,\n        gamerName : action.value\n      }\n    case BEGIN: \n     return {\n       ...state, \n       beeingPlaying: true,\n       displayAnimation:false,\n       playerPv: state.playerPvMax,\n       playerMana: state.playerManaMax,\n       monsterPv : state.monsterPvMax,\n       monsterMana: state.monsterManaMax,\n       monsterHeal : state.actualMonster.heal,\n       monsterSpecial: state.actualMonster.special\n     }\n     case CHANGE_DISPLAY_ANIMATION: \n      return {\n        ...state,\n        displayAnimation : !state.displayAnimation\n      }\n     case REGAIN_MANA: \n      return {\n        ...state,\n        monsterMana :state.monsterMana +5 < state.monsterManaMax ? state.monsterMana + 5 : state.monsterManaMax,\n        playerMana: state.playerMana + 5 < state.playerManaMax ?  state.playerMana + 5 : state.playerManaMax\n      } \n     case HEAL: {\n       if (action.value == 'player') {\n       return {\n        ...state,\n          playerMana : state.playerMana - 10,\n          playerPv: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ?\n          state.playerPvMax: \n          state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100),\n          messagePlayer: state.playerPv + Math.floor(15 * ( state.lvUpPlayer) /100) >= state.playerPvMax ? \n          'vous avez recuperez' + (state.playerPvMax  - state.playerPv) + 'pv' : \n          'vous avez recuperez' + Math.floor(15 * ( state.lvUpPlayer) /100) + 'pv'\n        }\n     }\n     if (action.value == 'monster') {\n      return {\n        ...state,\n        monsterMana : state.monsterMana - 10,\n        monsterPv: state.monsterPv + state.monsterHeal >= state.monsterPvMax ?\n        state.monsterPvMax: \n        state.monsterPv + state.monsterHeal,\n        messageMonster: state.monsterPv + state.monsterHeal >= state.monsterPvMax ? \n        'le monstre  a recuperer' + (state.monsterPvMax  - state.monsterPv) + 'pv' : \n        'le monstre  a recuperer' + state.monsterHeal + 'pv'\n      }\n    }\n    }\n      \n      case ATTACK: {\n        if( action.attacker == 'player') {\n          return {\n            ...state,\n            playerMana : action.typeAttack == 'special' ? state.playerMana - 20 : state.playerMana ,\n            monsterPv: state.monsterPv - (( action.typeAttack == 'normal' ? round(3, 10) : round(10, 15) ) * (state.lvUpPlayer ) / 100) <= 0 ?\n              0 :\n              state.monsterPv - (( action.typeAttack == 'normal' ? round(3, 10) : round(10, 15) ) * (state.lvUpPlayer ) / 100),\n            messageMonster: state.gamerName + ' vous a infliger ' + (( action.typeAttack == 'normal' ? round(3, 10) : round(10, 15) ) * (state.lvUpPlayer ) / 100) + ' de dommage'\n          }\n        }\n        if( action.attacker == 'monster') {\n          return {\n            ...state,\n            monsterMana : action.typeAttack == 'special' ? state.monsterMana - 20 : state.monsterMana,\n            playerPv: state.playerPv - (action.typeAttack== 'normal' ? state.actualMonster.dommage : state.actualMonster.special) <= 0 ?\n              0 :\n              state.playerPv - (action.typeAttack== 'normal' ? state.actualMonster.dommage : state.actualMonster.special),\n            messagePlayer: state.monsterName + ' vous a infliger ' + s(action.typeAttack== 'normal' ? state.actualMonster.dommage : state.actualMonster.special) + ' de dommage'\n          }\n        }\n      }\n      case CHANGE_LEVEL: \n        return {\n          ...state,\n          level: state.level + 1,\n          lvUpPlayer: state.lvUpPlayer + 20,\n          playerPvMax : state.playerPvMax + 20,\n          playerManaMax : state.playerPvMax + 20,\n          monsterPv: monsterArray[state.level + 1].pvMax,\n          monsterPvMax: monsterArray[state.level + 1].pvMax,\n          monsterMana : monsterArray[state.level + 1].manaMax,\n          monsterManaMax : monsterArray[state.level + 1].manaMax,\n          monsterName: monsterArray[state.level + 1].name,\n          monsterHeal : monsterArray[state.level + 1].heal,\n          monsterSpecial: monsterArray[state.level + 1].special,\n          messagePlayer: '',\n          messageMonster : '', \n          displayAnimation : false\n        }\n      case END :\n        return {\n          ...state,\n          level : 0,\n          gamerName:'',\n          monsterName: monsterArray[0],\n          beeingPlaying : false,\n          displayAnimation:false,\n          monsterPvMax: 100,\n          monsterPv: 100, \n          playerPvMax: 100,\n          playerPv: 100,\n          monsterManaMax: 100,\n          monsterMana: 100, \n          playerManaMax: 100,\n          playerMana: 100, \n       }\n    default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}