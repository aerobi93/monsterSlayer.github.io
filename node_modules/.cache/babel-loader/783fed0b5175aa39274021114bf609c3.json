{"ast":null,"code":"import { BEGIN, HEAL, ATTACK } from '../action';\nimport { round } from '../utils';\nconst initialState = {\n  level: 0,\n  monsterPv: 100,\n  playerPv: 100,\n  playerName: 'rom',\n  dommage: '',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case BEGIN:\n      {\n        return { ...state,\n          gameBegining: action.value,\n          playerPv: state.playerPv * ((100 + state.level * 20) / 100),\n          monsterPv: state.monsterPv * ((100 + state.level * 10) / 100),\n          messageDommageMonster: '',\n          messageDommagePlayer: ''\n        };\n      }\n\n    case HEAL:\n      {\n        return { ...state,\n          playerPv: state.playerPv + 10,\n          messageDommagePlayer: 'vous avez recuperer 10 pv'\n        };\n      }\n\n    case ATTACK:\n      {\n        console.log('dommage');\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/my-app/src/reducers/index.js"],"names":["BEGIN","HEAL","ATTACK","round","initialState","level","monsterPv","playerPv","playerName","dommage","messageDommageMonster","messageDommagePlayer","gameBegining","reducer","state","action","type","value","console","log"],"mappings":"AAAA,SAAUA,KAAV,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAqC,WAArC;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CADW;AAEnBC,EAAAA,SAAS,EAAG,GAFO;AAGnBC,EAAAA,QAAQ,EAAG,GAHQ;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,qBAAqB,EAAE,EANJ;AAOnBC,EAAAA,oBAAoB,EAAE,EAPH;AAQnBC,EAAAA,YAAY,EAAC;AARM,CAArB;;AAYE,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BV,YAA8B;AAAA,MAAhBW,MAAgB,uEAAP,EAAO;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKhB,KAAL;AAAY;AACV,eAAO,EACL,GAAGc,KADE;AAELF,UAAAA,YAAY,EAAEG,MAAM,CAACE,KAFhB;AAGLV,UAAAA,QAAQ,EAAGO,KAAK,CAACP,QAAN,IAAkB,CAAC,MAAMO,KAAK,CAACT,KAAN,GAAa,EAApB,IAAwB,GAA1C,CAHN;AAILC,UAAAA,SAAS,EAAGQ,KAAK,CAACR,SAAN,IAAmB,CAAC,MAAMQ,KAAK,CAACT,KAAN,GAAa,EAApB,IAAwB,GAA3C,CAJP;AAKLK,UAAAA,qBAAqB,EAAE,EALlB;AAMLC,UAAAA,oBAAoB,EAAE;AANjB,SAAP;AAQD;;AACD,SAAKV,IAAL;AAAW;AACT,eAAO,EACL,GAAGa,KADE;AAENP,UAAAA,QAAQ,EAAGO,KAAK,CAACP,QAAN,GAAiB,EAFtB;AAGNI,UAAAA,oBAAoB,EAAE;AAHhB,SAAP;AAKD;;AACD,SAAKT,MAAL;AAAa;AACXgB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACC;AAAS,aAAOL,KAAP;AArBb;AAuBD,CAxBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import {  BEGIN,  HEAL, ATTACK} from '../action'\nimport {round} from '../utils'\n\nconst initialState = {\n  level : 0,\n  monsterPv : 100,\n  playerPv : 100,\n  playerName: 'rom',\n  dommage: '',\n  messageDommageMonster: '',\n  messageDommagePlayer: '',\n  gameBegining:false,\n\n  };\n  \n  const reducer = (state = initialState, action = {}) => {\n    switch(action.type) {\n      case BEGIN: {\n        return {\n          ...state,\n          gameBegining: action.value,\n          playerPv : state.playerPv * ((100 + state.level *20)/100),\n          monsterPv : state.monsterPv * ((100 + state.level *10)/100),\n          messageDommageMonster: '',\n          messageDommagePlayer: '',\n        }\n      }\n      case HEAL: {\n        return {\n          ...state,\n         playerPv : state.playerPv + 10,\n         messageDommagePlayer: 'vous avez recuperer 10 pv'\n        }\n      }\n      case ATTACK: {\n        console.log('dommage')\n      }\n        default: return state\n    }\n  }\n  export default reducer"]},"metadata":{},"sourceType":"module"}