{"ast":null,"code":"import { SET_GAMER_NAME, BEGIN, END } from '../action';\nimport { monsterArray } from '../utils';\nconst initialState = {\n  level: 0,\n  gamerName: '',\n  monsterName: monsterArray[0],\n  beeingPlaying: false,\n  displayAnimation: false,\n  monsterPvMax: 100,\n  monsterPv: 100,\n  playerPvMax: 100,\n  playerPV: 100,\n  monsterManaMax: 100,\n  monsterMana: 100,\n  playerManaMax: 100,\n  playerMana: 100\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_GAMER_NAME:\n      return { ...state,\n        gamerName: action.value\n      };\n\n    case BEGIN:\n      return { ...state,\n        beeingPlaying: true\n      };\n\n    case END:\n      return {\n        state: initialState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rom/Desktop/reactBulder/monster_slayer3_react/src/reducers/index.tsx"],"names":["SET_GAMER_NAME","BEGIN","END","monsterArray","initialState","level","gamerName","monsterName","beeingPlaying","displayAnimation","monsterPvMax","monsterPv","playerPvMax","playerPV","monsterManaMax","monsterMana","playerManaMax","playerMana","reducer","state","action","type","value"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,KAAzB,EAAgCC,GAAhC,QAA2C,WAA3C;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG,CADW;AAEnBC,EAAAA,SAAS,EAAC,EAFS;AAGnBC,EAAAA,WAAW,EAAEJ,YAAY,CAAC,CAAD,CAHN;AAInBK,EAAAA,aAAa,EAAG,KAJG;AAKnBC,EAAAA,gBAAgB,EAAC,KALE;AAMnBC,EAAAA,YAAY,EAAE,GANK;AAOnBC,EAAAA,SAAS,EAAE,GAPQ;AAQnBC,EAAAA,WAAW,EAAE,GARM;AASnBC,EAAAA,QAAQ,EAAE,GATS;AAUnBC,EAAAA,cAAc,EAAE,GAVG;AAWnBC,EAAAA,WAAW,EAAE,GAXM;AAYnBC,EAAAA,aAAa,EAAE,GAZI;AAanBC,EAAAA,UAAU,EAAE;AAbO,CAArB;;AAgBA,MAAMC,OAAO,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAnCf,YAAmC;AAAA,MAArBgB,MAAqB,uEAAR,EAAQ;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKrB,cAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELb,QAAAA,SAAS,EAAGc,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKrB,KAAL;AACC,aAAO,EACL,GAAGkB,KADE;AAELX,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIA,SAAKN,GAAL;AACE,aAAO;AACLiB,QAAAA,KAAK,EAAEf;AADF,OAAP;;AAKH;AAAS,aAAOe,KAAP;AAjBX;AAmBD,CApBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import { SET_GAMER_NAME, BEGIN, END } from '../action'\nimport { monsterArray } from '../utils'\n\nconst initialState = {\n  level : 0,\n  gamerName:'',\n  monsterName: monsterArray[0],\n  beeingPlaying : false,\n  displayAnimation:false,\n  monsterPvMax: 100,\n  monsterPv: 100, \n  playerPvMax: 100,\n  playerPV: 100,\n  monsterManaMax: 100,\n  monsterMana: 100, \n  playerManaMax: 100,\n  playerMana: 100, \n};\n\nconst reducer = (state:any = initialState, action:any = {})  => {\n  switch(action.type) {\n    case SET_GAMER_NAME:\n      return {\n        ...state,\n        gamerName : action.value\n      }\n    case BEGIN: \n     return {\n       ...state, \n       beeingPlaying: true\n     }\n     case END :\n       return {\n         state: initialState,\n       }\n    \n    \n    default: return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}